// <auto-generated />
using System;
using FitSwipe.DataAccess.Model;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace FitSwipe.DataAccess.Migrations
{
    [DbContext(typeof(FitSwipeDbContext))]
    [Migration("20241002125809_More seed-data")]
    partial class Moreseeddata
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("FitSwipe.DataAccess.Model.Entity.EmailTemplate", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Body")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Params")
                        .HasColumnType("text");

                    b.Property<int>("RecordStatus")
                        .HasColumnType("integer");

                    b.Property<bool>("Status")
                        .HasColumnType("boolean");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("EmailTemplates");

                    b.HasData(
                        new
                        {
                            Id = new Guid("4d222663-cdd6-4d27-a639-7318527a5747"),
                            Body = "Chào mừng bạn đến với FitWipe! Kính gửi [Name], vui lòng xác nhận địa chỉ email của bạn bằng cách nhấn vào đường link sau: <a href=\"[VerificationLink]\">Xác nhận Email</a>.<br><br>Cảm ơn bạn đã tham gia cùng chúng tôi!<br><br>Đội ngũ FitWipe",
                            CreatedDate = new DateTime(2024, 10, 2, 12, 58, 8, 771, DateTimeKind.Utc).AddTicks(9186),
                            Description = "Email này được gửi để xác nhận đăng ký tài khoản FitWipe.",
                            Name = "Register_Mail",
                            Params = "[Name], [VerificationLink]",
                            RecordStatus = 0,
                            Status = true,
                            Subject = "Chào mừng đến với FitWipe! Vui lòng xác nhận email của bạn"
                        },
                        new
                        {
                            Id = new Guid("8200b207-320e-4009-9013-408ed7689bfe"),
                            Body = "Chúng tôi đã nhận được yêu cầu đặt lại mật khẩu cho tài khoản của bạn tại FitWipe. Kính gửi [Name], vui lòng đặt lại mật khẩu của bạn bằng cách nhấn vào đường link sau: <a href=\"[ResetPasswordLink]\">Đặt lại mật khẩu</a>.<br><br>Nếu bạn không yêu cầu việc này, vui lòng bỏ qua email này.<br><br>Đội ngũ FitWipe",
                            CreatedDate = new DateTime(2024, 10, 2, 12, 58, 8, 771, DateTimeKind.Utc).AddTicks(9201),
                            Description = "Email này được gửi khi người dùng yêu cầu đặt lại mật khẩu cho tài khoản FitWipe.",
                            Name = "Forgot_Password",
                            Params = "[Name], [ResetPasswordLink]",
                            RecordStatus = 0,
                            Status = true,
                            Subject = "Yêu cầu đặt lại mật khẩu FitWipe"
                        });
                });

            modelBuilder.Entity("FitSwipe.DataAccess.Model.Entity.FeedbackImage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("MediaUrl")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("RecordStatus")
                        .HasColumnType("integer");

                    b.Property<Guid>("TrainingId")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("TrainingId");

                    b.ToTable("FeedbackImages");
                });

            modelBuilder.Entity("FitSwipe.DataAccess.Model.Entity.Report", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Reason")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("RecordStatus")
                        .HasColumnType("integer");

                    b.Property<string>("ReporterId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<string>("TargetId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("ReporterId");

                    b.HasIndex("TargetId");

                    b.ToTable("Reports");
                });

            modelBuilder.Entity("FitSwipe.DataAccess.Model.Entity.ReportImage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("MediaUrl")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("RecordStatus")
                        .HasColumnType("integer");

                    b.Property<Guid>("ReportId")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("ReportId");

                    b.ToTable("ReportImages");
                });

            modelBuilder.Entity("FitSwipe.DataAccess.Model.Entity.Slot", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Content")
                        .HasColumnType("text");

                    b.Property<string>("CreateById")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Feedback")
                        .HasColumnType("text");

                    b.Property<string>("Location")
                        .HasColumnType("text");

                    b.Property<int?>("PaymentStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(1);

                    b.Property<double?>("Rating")
                        .HasColumnType("double precision");

                    b.Property<int>("RecordStatus")
                        .HasColumnType("integer");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0);

                    b.Property<Guid?>("TrainingId")
                        .HasColumnType("uuid");

                    b.Property<int?>("Type")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("CreateById");

                    b.HasIndex("TrainingId");

                    b.ToTable("Slots");
                });

            modelBuilder.Entity("FitSwipe.DataAccess.Model.Entity.SlotVideos", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("RecordStatus")
                        .HasColumnType("integer");

                    b.Property<Guid>("SlotId")
                        .HasColumnType("uuid");

                    b.Property<string>("ThumbnailUrl")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("VideoUrl")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("SlotId");

                    b.ToTable("SlotVideos");
                });

            modelBuilder.Entity("FitSwipe.DataAccess.Model.Entity.Tag", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("CreateById")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("RecordStatus")
                        .HasColumnType("integer");

                    b.Property<int?>("SpecialTag")
                        .HasColumnType("integer");

                    b.Property<string>("TagImage")
                        .HasColumnType("text");

                    b.Property<int>("TagType")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("CreateById");

                    b.ToTable("Tags");

                    b.HasData(
                        new
                        {
                            Id = new Guid("7c2437e3-7c04-48b5-bee4-df8ef183bb28"),
                            CreateById = "123abc",
                            CreatedDate = new DateTime(2024, 10, 2, 12, 58, 8, 771, DateTimeKind.Utc).AddTicks(8928),
                            Name = "Bóng đá",
                            RecordStatus = 0,
                            TagImage = "https://cdn.tuoitre.vn/ttct//2020/12/13/16078750289060-lich-thi-dau-bong-da-hom-nay-0211.jpg",
                            TagType = 0
                        },
                        new
                        {
                            Id = new Guid("fbc4934e-d7d0-40a8-a463-b832768945af"),
                            CreateById = "123abc",
                            CreatedDate = new DateTime(2024, 10, 2, 12, 58, 8, 771, DateTimeKind.Utc).AddTicks(8982),
                            Name = "Bơi lội",
                            RecordStatus = 0,
                            TagImage = "https://file.hstatic.net/1000391576/file/boi_loi_7d4d69c53ac1494eabb2a446d4d503a0_grande.jpg",
                            TagType = 0
                        },
                        new
                        {
                            Id = new Guid("502fc407-33c7-4131-b072-28f232103e4c"),
                            CreateById = "123abc",
                            CreatedDate = new DateTime(2024, 10, 2, 12, 58, 8, 771, DateTimeKind.Utc).AddTicks(8985),
                            Name = "Cầu Lông",
                            RecordStatus = 0,
                            TagImage = "https://vecgroup.vn/images/products/2021/08/24/large/qua-cau-long_1629778779.jpg",
                            TagType = 0
                        },
                        new
                        {
                            Id = new Guid("b58b0973-c8f8-46ef-9f3a-bc18cb1675b7"),
                            CreateById = "123abc",
                            CreatedDate = new DateTime(2024, 10, 2, 12, 58, 8, 771, DateTimeKind.Utc).AddTicks(8986),
                            Name = "Bóng chuyền",
                            RecordStatus = 0,
                            TagImage = "https://file.hstatic.net/200000333667/article/image.jpg_4b1e1c8ce20f4c32824f275f34ff30af_1024x1024.jpg",
                            TagType = 0
                        },
                        new
                        {
                            Id = new Guid("9713930e-eb53-4f10-a2f9-826de2391553"),
                            CreateById = "123abc",
                            CreatedDate = new DateTime(2024, 10, 2, 12, 58, 8, 771, DateTimeKind.Utc).AddTicks(8988),
                            Name = "Bóng rổ",
                            RecordStatus = 0,
                            TagImage = "https://thethaothienlong.vn/wp-content/uploads/2022/04/Kich-thuoc-qua-bong-ro-1.jpg",
                            TagType = 0
                        },
                        new
                        {
                            Id = new Guid("4281e1ac-1e01-4427-89da-5fed7e508134"),
                            CreateById = "123abc",
                            CreatedDate = new DateTime(2024, 10, 2, 12, 58, 8, 771, DateTimeKind.Utc).AddTicks(8990),
                            Name = "Thể thao nói chung",
                            RecordStatus = 0,
                            TagImage = "https://llv.edu.vn/media/2018/09/iStock-949190756-800x440.jpg",
                            TagType = 0
                        },
                        new
                        {
                            Id = new Guid("e7654a7f-2c98-4d4e-a9f2-f44de9d4ca5d"),
                            CreateById = "123abc",
                            CreatedDate = new DateTime(2024, 10, 2, 12, 58, 8, 771, DateTimeKind.Utc).AddTicks(8991),
                            Name = "Bida",
                            RecordStatus = 0,
                            TagImage = "https://billiardshoanthuy.vn/wp-content/uploads/2021/05/phu-kien-ban-bida-2.jpg",
                            TagType = 0
                        },
                        new
                        {
                            Id = new Guid("9ada5b53-df39-4c05-999c-c2b72c0c2197"),
                            CreateById = "123abc",
                            CreatedDate = new DateTime(2024, 10, 2, 12, 58, 8, 771, DateTimeKind.Utc).AddTicks(8993),
                            Name = "Tập Gym",
                            RecordStatus = 0,
                            TagImage = "https://tiki.vn/blog/wp-content/uploads/2023/07/elite-fitness-1024x583.jpg",
                            TagType = 0
                        },
                        new
                        {
                            Id = new Guid("4265e2cc-ada7-455b-97aa-9099fb08898b"),
                            CreateById = "123abc",
                            CreatedDate = new DateTime(2024, 10, 2, 12, 58, 8, 771, DateTimeKind.Utc).AddTicks(8995),
                            Name = "Đi, chạy bộ",
                            RecordStatus = 0,
                            TagImage = "https://pos.nvncdn.com/be3294-43017/art/artCT/20230228_9uObLfWys7Q0IXe4.jpg",
                            TagType = 0
                        },
                        new
                        {
                            Id = new Guid("1419f9dd-cdc4-4cd0-83d3-0751e8819c98"),
                            CreateById = "123abc",
                            CreatedDate = new DateTime(2024, 10, 2, 12, 58, 8, 771, DateTimeKind.Utc).AddTicks(8998),
                            Name = "Phim ảnh",
                            RecordStatus = 0,
                            TagImage = "https://lawnet.vn/uploads/image/2023/10/17/015815855.jpg",
                            TagType = 0
                        },
                        new
                        {
                            Id = new Guid("898e1305-9c4a-4eaa-8c1f-4f8f84eb087f"),
                            CreateById = "123abc",
                            CreatedDate = new DateTime(2024, 10, 2, 12, 58, 8, 771, DateTimeKind.Utc).AddTicks(8999),
                            Name = "Truyện tranh",
                            RecordStatus = 0,
                            TagImage = "https://taschen.makaira.media/taschen/image/upload/f_webp,w_1200/v1673462260/products-live/a3d446fb0046b587eb0ed76edca3f4d6.jpg",
                            TagType = 0
                        },
                        new
                        {
                            Id = new Guid("d3a93747-f7e2-4ff8-be85-e4b8ec957b1c"),
                            CreateById = "123abc",
                            CreatedDate = new DateTime(2024, 10, 2, 12, 58, 8, 771, DateTimeKind.Utc).AddTicks(9001),
                            Name = "Du lịch",
                            RecordStatus = 0,
                            TagImage = "https://dynamic-media-cdn.tripadvisor.com/media/photo-o/18/4f/7d/fc/caption.jpg?w=1200&h=1200&s=1",
                            TagType = 0
                        },
                        new
                        {
                            Id = new Guid("bdd29ba3-56bb-4309-9176-b01688821fc1"),
                            CreateById = "123abc",
                            CreatedDate = new DateTime(2024, 10, 2, 12, 58, 8, 771, DateTimeKind.Utc).AddTicks(9002),
                            Name = "Thể thao trí tuệ",
                            RecordStatus = 0,
                            TagImage = "https://upload.wikimedia.org/wikipedia/commons/thumb/6/6f/ChessSet.jpg/640px-ChessSet.jpg",
                            TagType = 0
                        },
                        new
                        {
                            Id = new Guid("bff84c4b-63fa-473c-ac6a-39397ac82b59"),
                            CreateById = "123abc",
                            CreatedDate = new DateTime(2024, 10, 2, 12, 58, 8, 771, DateTimeKind.Utc).AddTicks(9003),
                            Name = "Đọc sách",
                            RecordStatus = 0,
                            TagImage = "https://images.theconversation.com/files/45159/original/rptgtpxd-1396254731.jpg?ixlib=rb-4.1.0&q=45&auto=format&w=1356&h=668&fit=crop",
                            TagType = 0
                        },
                        new
                        {
                            Id = new Guid("534a662c-27e8-4ac2-bd25-ffc32a359217"),
                            CreateById = "123abc",
                            CreatedDate = new DateTime(2024, 10, 2, 12, 58, 8, 771, DateTimeKind.Utc).AddTicks(9005),
                            Name = "Khoa học",
                            RecordStatus = 0,
                            TagImage = "https://www.training.com.au/wp-content/uploads/science-stem-feature.png",
                            TagType = 0
                        },
                        new
                        {
                            Id = new Guid("60ac450f-3092-4c51-9f6c-34d81135784e"),
                            CreateById = "123abc",
                            CreatedDate = new DateTime(2024, 10, 2, 12, 58, 8, 771, DateTimeKind.Utc).AddTicks(9006),
                            Name = "Game",
                            RecordStatus = 0,
                            TagImage = "https://genk.mediacdn.vn/139269124445442048/2022/7/28/tmb-1658998970448906989995.jpg",
                            TagType = 0
                        },
                        new
                        {
                            Id = new Guid("b3c2692c-4f42-41ed-aa1e-f85e50505eee"),
                            CreateById = "123abc",
                            CreatedDate = new DateTime(2024, 10, 2, 12, 58, 8, 771, DateTimeKind.Utc).AddTicks(9009),
                            Name = "Nhiếp ảnh",
                            RecordStatus = 0,
                            TagImage = "https://aaftonline.com/blog/wp-content/uploads/2024/01/What-are-the-Benefits-of-Photography-Complete-Overview.png",
                            TagType = 0
                        },
                        new
                        {
                            Id = new Guid("10ccf78a-8ec0-412b-97c2-662638191b1e"),
                            CreateById = "123abc",
                            CreatedDate = new DateTime(2024, 10, 2, 12, 58, 8, 771, DateTimeKind.Utc).AddTicks(9011),
                            Name = "Hội họa",
                            RecordStatus = 0,
                            TagImage = "https://upload.wikimedia.org/wikipedia/commons/thumb/e/ea/Van_Gogh_-_Starry_Night_-_Google_Art_Project.jpg/1200px-Van_Gogh_-_Starry_Night_-_Google_Art_Project.jpg",
                            TagType = 0
                        },
                        new
                        {
                            Id = new Guid("faa4b885-e150-481e-a6e7-8886d0f93e44"),
                            CreateById = "123abc",
                            CreatedDate = new DateTime(2024, 10, 2, 12, 58, 8, 771, DateTimeKind.Utc).AddTicks(9013),
                            Name = "Nghe nhạc",
                            RecordStatus = 0,
                            TagImage = "https://static.vecteezy.com/system/resources/thumbnails/037/044/052/small_2x/ai-generated-studio-shot-of-black-headphones-over-music-note-explosion-background-with-empty-space-for-text-photo.jpg",
                            TagType = 0
                        },
                        new
                        {
                            Id = new Guid("b711a2c9-e7d6-412c-8a2c-bef183546309"),
                            CreateById = "123abc",
                            CreatedDate = new DateTime(2024, 10, 2, 12, 58, 8, 771, DateTimeKind.Utc).AddTicks(9014),
                            Name = "Chơi nhạc cụ",
                            RecordStatus = 0,
                            TagImage = "https://t3.ftcdn.net/jpg/01/34/38/92/360_F_134389281_5Jak3tbsoDggHIfIKKwJ8L7064ACIMNE.jpg",
                            TagType = 0
                        },
                        new
                        {
                            Id = new Guid("a3aaa9d9-bdca-4c4c-954d-170d5c8f7a81"),
                            CreateById = "123abc",
                            CreatedDate = new DateTime(2024, 10, 2, 12, 58, 8, 771, DateTimeKind.Utc).AddTicks(9015),
                            Name = "Tán gẫu",
                            RecordStatus = 0,
                            TagImage = "https://transcode-v2.app.engoo.com/image/fetch/f_auto,c_lfill,w_300,dpr_3/https://assets.app.engoo.com/images/rGTEEA2fm66YMzeJz2UbwkKOW62bZVlqKOKZrXlMN7g.jpeg",
                            TagType = 0
                        },
                        new
                        {
                            Id = new Guid("9d6f15c3-6155-44f4-ad56-de2958e27c25"),
                            CreateById = "123abc",
                            CreatedDate = new DateTime(2024, 10, 2, 12, 58, 8, 771, DateTimeKind.Utc).AddTicks(9017),
                            Name = "Công nghệ",
                            RecordStatus = 0,
                            TagImage = "https://www.simplilearn.com/ice9/free_resources_article_thumb/Technology_Trends.jpg",
                            TagType = 0
                        },
                        new
                        {
                            Id = new Guid("d3679c29-3251-47ec-bd6f-7a7b861a90f9"),
                            CreateById = "123abc",
                            CreatedDate = new DateTime(2024, 10, 2, 12, 58, 8, 771, DateTimeKind.Utc).AddTicks(9018),
                            Name = "Lịch Sử",
                            RecordStatus = 0,
                            TagImage = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRWz_tIgvQXPAaSmvYa7CqZo_biaRK9D_O8uA&s",
                            TagType = 0
                        },
                        new
                        {
                            Id = new Guid("7933b2c4-cc49-49c2-8b29-1b0c61bc0b31"),
                            CreateById = "123abc",
                            CreatedDate = new DateTime(2024, 10, 2, 12, 58, 8, 771, DateTimeKind.Utc).AddTicks(9020),
                            Name = "Địa lý",
                            RecordStatus = 0,
                            TagImage = "https://www.aag.org/wp-content/uploads/2021/12/shutterstock_1111879247.jpg",
                            TagType = 0
                        },
                        new
                        {
                            Id = new Guid("a4082a9f-569c-40fc-8ab9-8ce1a61141e7"),
                            CreateById = "123abc",
                            CreatedDate = new DateTime(2024, 10, 2, 12, 58, 8, 771, DateTimeKind.Utc).AddTicks(9021),
                            Name = "Triết học",
                            RecordStatus = 0,
                            TagImage = "https://www.rollingstone.com/wp-content/uploads/2024/01/unlocking_the_power_why_you_should_consider_hiring_philosophy_graduates-.jpg",
                            TagType = 0
                        },
                        new
                        {
                            Id = new Guid("f8efa17c-7c40-4090-bd4c-12cdb2eb57fa"),
                            CreateById = "123abc",
                            CreatedDate = new DateTime(2024, 10, 2, 12, 58, 8, 771, DateTimeKind.Utc).AddTicks(9024),
                            Name = "Sống Ảo",
                            RecordStatus = 0,
                            TagImage = "https://imagev3.vietnamplus.vn/w1000/Uploaded/2024/hotnnz/2024_08_13/song-ao3-6646.jpg.webp",
                            TagType = 0
                        },
                        new
                        {
                            Id = new Guid("a3b16ebb-d032-4f88-99b0-0b496cd372d8"),
                            CreateById = "123abc",
                            CreatedDate = new DateTime(2024, 10, 2, 12, 58, 8, 771, DateTimeKind.Utc).AddTicks(9025),
                            Name = "Quản lý cân nặng",
                            RecordStatus = 0,
                            TagImage = "https://thanhnien.mediacdn.vn/Uploaded/minhnguyet/2022_05_10/an-kieng-9141.jpg",
                            TagType = 1
                        },
                        new
                        {
                            Id = new Guid("9ad8f365-0dbc-4853-905f-02992fa3b818"),
                            CreateById = "123abc",
                            CreatedDate = new DateTime(2024, 10, 2, 12, 58, 8, 771, DateTimeKind.Utc).AddTicks(9027),
                            Name = "Phát triển cơ bắp",
                            RecordStatus = 0,
                            TagImage = "https://www.dmoose.com/cdn/shop/articles/feature-image_87a28752-6da3-4be8-8814-d5221236136d.jpg?v=1676644951",
                            TagType = 1
                        },
                        new
                        {
                            Id = new Guid("ce32aa3e-3b02-4b37-8200-439456563e70"),
                            CreateById = "123abc",
                            CreatedDate = new DateTime(2024, 10, 2, 12, 58, 8, 771, DateTimeKind.Utc).AddTicks(9028),
                            Name = "Có body chuẩn chỉnh",
                            RecordStatus = 0,
                            TagImage = "https://cdn.nhathuoclongchau.com.vn/unsafe/800x0/https://cms-prod.s3-sgn09.fptcloud.com/fitness_la_gi_loi_ich_va_phuong_phap_tap_luyen_fitness_1_3c4e094223.png",
                            TagType = 1
                        },
                        new
                        {
                            Id = new Guid("ad211a7c-727e-4fee-8eb3-c4691f8bd1a4"),
                            CreateById = "123abc",
                            CreatedDate = new DateTime(2024, 10, 2, 12, 58, 8, 771, DateTimeKind.Utc).AddTicks(9029),
                            Name = "Phòng tránh bệnh",
                            RecordStatus = 0,
                            TagImage = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQv509Yw7GUN5twNNk4G5Pvu1TBqFmhrL_3UQ&s",
                            TagType = 1
                        },
                        new
                        {
                            Id = new Guid("f22748f5-71f9-4823-a1c9-4cda239b1fb2"),
                            CreateById = "123abc",
                            CreatedDate = new DateTime(2024, 10, 2, 12, 58, 8, 771, DateTimeKind.Utc).AddTicks(9031),
                            Name = "Cải thiện tình trạng bệnh",
                            RecordStatus = 0,
                            TagImage = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQv509Yw7GUN5twNNk4G5Pvu1TBqFmhrL_3UQ&s",
                            TagType = 1
                        },
                        new
                        {
                            Id = new Guid("1f416dd7-0574-4ca5-9c90-d5e25887fa31"),
                            CreateById = "123abc",
                            CreatedDate = new DateTime(2024, 10, 2, 12, 58, 8, 771, DateTimeKind.Utc).AddTicks(9032),
                            Name = "Tăng cảm giác hạnh phúc, giảm căng thẳng",
                            RecordStatus = 0,
                            TagImage = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcT8ZXc_bemAYbupxmGz0pZGy4L1Zr6hGVsYdA&s",
                            TagType = 1
                        },
                        new
                        {
                            Id = new Guid("c20c44f1-1cbb-4131-bb40-6c2b013b1d6f"),
                            CreateById = "123abc",
                            CreatedDate = new DateTime(2024, 10, 2, 12, 58, 8, 771, DateTimeKind.Utc).AddTicks(9034),
                            Name = "Cải thiện sự dẻo dai",
                            RecordStatus = 0,
                            TagImage = "https://cdn.shopify.com/s/files/1/0453/0381/files/fullsizeoutput_2d4_1024x1024.jpg?v=1662646979",
                            TagType = 1
                        },
                        new
                        {
                            Id = new Guid("359fd7d1-b677-4466-9a95-6b38fbf31d93"),
                            CreateById = "123abc",
                            CreatedDate = new DateTime(2024, 10, 2, 12, 58, 8, 771, DateTimeKind.Utc).AddTicks(9038),
                            Name = "Cải thiện sức bền",
                            RecordStatus = 0,
                            TagImage = "https://vinmec-prod.s3.amazonaws.com/images/20210524_085806_814180_chay-bo-bao-nhieu-cal.max-800x800.jpg",
                            TagType = 1
                        },
                        new
                        {
                            Id = new Guid("e10e6946-7b2d-490a-bd06-593211ad4c41"),
                            CreateById = "123abc",
                            CreatedDate = new DateTime(2024, 10, 2, 12, 58, 8, 771, DateTimeKind.Utc).AddTicks(9040),
                            Name = "Cải thiện sức khỏe tổng quát",
                            RecordStatus = 0,
                            TagImage = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcThCjFemkP0h0IZYpu31k-xGK9IvigaysteqA&s",
                            TagType = 1
                        },
                        new
                        {
                            Id = new Guid("baf752b8-c11e-4f9a-986a-95522cd0ef1c"),
                            CreateById = "123abc",
                            CreatedDate = new DateTime(2024, 10, 2, 12, 58, 8, 771, DateTimeKind.Utc).AddTicks(9041),
                            Name = "Yoga / Pilates",
                            RecordStatus = 0,
                            TagImage = "https://thamtapyoga.vn/wp-content/uploads/2024/01/3-2.jpeg",
                            TagType = 2
                        },
                        new
                        {
                            Id = new Guid("0a55b36a-6724-4dee-988f-61100b2800a4"),
                            CreateById = "123abc",
                            CreatedDate = new DateTime(2024, 10, 2, 12, 58, 8, 771, DateTimeKind.Utc).AddTicks(9043),
                            Name = "Calisthenic",
                            RecordStatus = 0,
                            TagImage = "https://cdn.nhathuoclongchau.com.vn/unsafe/800x0/https://cms-prod.s3-sgn09.fptcloud.com/giai_dap_thac_mac_calisthenics_khac_gi_gym_1_8d5dd4026b.jpg",
                            TagType = 2
                        },
                        new
                        {
                            Id = new Guid("e12be1c1-fb6d-4582-8c24-679ab9660202"),
                            CreateById = "123abc",
                            CreatedDate = new DateTime(2024, 10, 2, 12, 58, 8, 771, DateTimeKind.Utc).AddTicks(9044),
                            Name = "Tập sức mạnh",
                            RecordStatus = 0,
                            TagImage = "https://www.thethaothientruong.vn/uploads/2020/Powerlifting-la-gi.jpg",
                            TagType = 2
                        },
                        new
                        {
                            Id = new Guid("51242843-b319-41f3-8c0b-2c19527d4a80"),
                            CreateById = "123abc",
                            CreatedDate = new DateTime(2024, 10, 2, 12, 58, 8, 771, DateTimeKind.Utc).AddTicks(9045),
                            Name = "Cardio",
                            RecordStatus = 0,
                            TagImage = "https://file.hstatic.net/1000308068/file/tap-cardio-vao-luc-nao-la-hieu-qua-nhat_cb884317c05d4df980138121ee113112_grande.jpg",
                            TagType = 2
                        },
                        new
                        {
                            Id = new Guid("713957b5-28a9-4629-9f44-25f1e0e397c4"),
                            CreateById = "123abc",
                            CreatedDate = new DateTime(2024, 10, 2, 12, 58, 8, 771, DateTimeKind.Utc).AddTicks(9047),
                            Name = "HIIT",
                            RecordStatus = 0,
                            TagImage = "https://hips.hearstapps.com/hmg-prod/images/athletes-doing-push-ups-with-dumbbells-on-floor-royalty-free-image-1638463573.jpg",
                            TagType = 2
                        },
                        new
                        {
                            Id = new Guid("bac36144-8194-4b91-bace-252238ea49eb"),
                            CreateById = "123abc",
                            CreatedDate = new DateTime(2024, 10, 2, 12, 58, 8, 771, DateTimeKind.Utc).AddTicks(9048),
                            Name = "Kickfit",
                            RecordStatus = 0,
                            TagImage = "https://storage.googleapis.com/leep_app_website/2020/11/Kick-fit-khong-phai-la-kick-boxing.jpg",
                            TagType = 2
                        },
                        new
                        {
                            Id = new Guid("d5cff4a7-293e-47a0-964f-87ab630bd0ea"),
                            CreateById = "123abc",
                            CreatedDate = new DateTime(2024, 10, 2, 12, 58, 8, 771, DateTimeKind.Utc).AddTicks(9050),
                            Name = "Tập ép dẻo",
                            RecordStatus = 0,
                            TagImage = "https://prod-everyoneactive-wp.s3.eu-west-2.amazonaws.com/wp-content/uploads/2020/03/23151503/flexibility-at-home.jpg",
                            TagType = 2
                        },
                        new
                        {
                            Id = new Guid("2ab03b2d-9719-47d3-ac0e-42dfae1c2bcc"),
                            CreateById = "123abc",
                            CreatedDate = new DateTime(2024, 10, 2, 12, 58, 8, 771, DateTimeKind.Utc).AddTicks(9052),
                            Name = "Thể dục nhịp điệu, theo nhạc",
                            RecordStatus = 0,
                            TagImage = "https://i.vietgiaitri.com/2018/10/9/the-duc-nhip-dieu-b2ab9f.jpg",
                            TagType = 2
                        },
                        new
                        {
                            Id = new Guid("72ab2e02-54ef-4e1d-a6e3-32d5cd47cce4"),
                            CreateById = "123abc",
                            CreatedDate = new DateTime(2024, 10, 2, 12, 58, 8, 771, DateTimeKind.Utc).AddTicks(9053),
                            Name = "Cùng giới",
                            RecordStatus = 0,
                            SpecialTag = 1,
                            TagType = 3
                        },
                        new
                        {
                            Id = new Guid("459d5ce9-1b28-411d-bf97-41f4f51dcb88"),
                            CreateById = "123abc",
                            CreatedDate = new DateTime(2024, 10, 2, 12, 58, 8, 771, DateTimeKind.Utc).AddTicks(9056),
                            Name = "Khác giới",
                            RecordStatus = 0,
                            SpecialTag = 0,
                            TagType = 3
                        },
                        new
                        {
                            Id = new Guid("50d1d2f7-bef5-401b-bf74-4ebccc75a4f5"),
                            CreateById = "123abc",
                            CreatedDate = new DateTime(2024, 10, 2, 12, 58, 8, 771, DateTimeKind.Utc).AddTicks(9058),
                            Name = "Ngoại hình đẹp",
                            RecordStatus = 0,
                            TagType = 3
                        },
                        new
                        {
                            Id = new Guid("89b3f17f-eb3b-4802-9fb2-694390b174f0"),
                            CreateById = "123abc",
                            CreatedDate = new DateTime(2024, 10, 2, 12, 58, 8, 771, DateTimeKind.Utc).AddTicks(9059),
                            Name = "Cung cấp giá cả phải chăng",
                            RecordStatus = 0,
                            TagType = 3
                        },
                        new
                        {
                            Id = new Guid("852cc1cf-df2e-4121-955c-45a4abc11c0d"),
                            CreateById = "123abc",
                            CreatedDate = new DateTime(2024, 10, 2, 12, 58, 8, 771, DateTimeKind.Utc).AddTicks(9060),
                            Name = "Gần",
                            RecordStatus = 0,
                            SpecialTag = 2,
                            TagType = 3
                        },
                        new
                        {
                            Id = new Guid("10f150d1-fd71-49c5-853e-c6f9effef006"),
                            CreateById = "123abc",
                            CreatedDate = new DateTime(2024, 10, 2, 12, 58, 8, 771, DateTimeKind.Utc).AddTicks(9062),
                            Name = "Tâm huyết với học viên",
                            RecordStatus = 0,
                            TagType = 3
                        },
                        new
                        {
                            Id = new Guid("3f96abc2-fe8e-4979-b97a-be10cc738d69"),
                            CreateById = "123abc",
                            CreatedDate = new DateTime(2024, 10, 2, 12, 58, 8, 771, DateTimeKind.Utc).AddTicks(9064),
                            Name = "Có trách nhiệm",
                            RecordStatus = 0,
                            TagType = 3
                        },
                        new
                        {
                            Id = new Guid("7b2a3c7e-ecf0-4f74-9991-bf27b9cfe111"),
                            CreateById = "123abc",
                            CreatedDate = new DateTime(2024, 10, 2, 12, 58, 8, 771, DateTimeKind.Utc).AddTicks(9098),
                            Name = "Có kinh nghiệm",
                            RecordStatus = 0,
                            TagType = 3
                        },
                        new
                        {
                            Id = new Guid("5b9217df-a281-478d-a2f5-636dcf72e37b"),
                            CreateById = "123abc",
                            CreatedDate = new DateTime(2024, 10, 2, 12, 58, 8, 771, DateTimeKind.Utc).AddTicks(9100),
                            Name = "Không nặng nề với học viên",
                            RecordStatus = 0,
                            TagType = 3
                        },
                        new
                        {
                            Id = new Guid("0cdeed83-8255-4604-9a9e-f9c9bded2d69"),
                            CreateById = "123abc",
                            CreatedDate = new DateTime(2024, 10, 2, 12, 58, 8, 771, DateTimeKind.Utc).AddTicks(9102),
                            Name = "Giàu kiến thức",
                            RecordStatus = 0,
                            TagType = 3
                        },
                        new
                        {
                            Id = new Guid("fd60bde3-a149-44e0-8a35-51d626ad19a4"),
                            CreateById = "123abc",
                            CreatedDate = new DateTime(2024, 10, 2, 12, 58, 8, 771, DateTimeKind.Utc).AddTicks(9103),
                            Name = "Luôn sẵn sàng tư vấn ngoài giờ",
                            RecordStatus = 0,
                            TagType = 3
                        },
                        new
                        {
                            Id = new Guid("c839cb64-10f2-4c48-af1a-05812679ef77"),
                            CreateById = "123abc",
                            CreatedDate = new DateTime(2024, 10, 2, 12, 58, 8, 771, DateTimeKind.Utc).AddTicks(9105),
                            Name = "Biết truyền cảm hứng, tạo động lực",
                            RecordStatus = 0,
                            TagType = 3
                        },
                        new
                        {
                            Id = new Guid("4533834e-c2ac-40e6-9b68-6d9c87555782"),
                            CreateById = "123abc",
                            CreatedDate = new DateTime(2024, 10, 2, 12, 58, 8, 771, DateTimeKind.Utc).AddTicks(9106),
                            Name = "Đảm bảo mục tiêu cho học viên",
                            RecordStatus = 0,
                            TagType = 3
                        },
                        new
                        {
                            Id = new Guid("5fec8c08-536b-4297-83d7-1fc855e118af"),
                            CreateById = "123abc",
                            CreatedDate = new DateTime(2024, 10, 2, 12, 58, 8, 771, DateTimeKind.Utc).AddTicks(9108),
                            Name = "Kiên trì",
                            RecordStatus = 0,
                            TagType = 4
                        },
                        new
                        {
                            Id = new Guid("15c7ae90-0f99-425f-b68a-55a71f7f7e5c"),
                            CreateById = "123abc",
                            CreatedDate = new DateTime(2024, 10, 2, 12, 58, 8, 771, DateTimeKind.Utc).AddTicks(9110),
                            Name = "Siêng năng",
                            RecordStatus = 0,
                            TagType = 4
                        },
                        new
                        {
                            Id = new Guid("4d025b36-2508-453e-a489-e77d957cbea3"),
                            CreateById = "123abc",
                            CreatedDate = new DateTime(2024, 10, 2, 12, 58, 8, 771, DateTimeKind.Utc).AddTicks(9112),
                            Name = "Vui tính, hài hước",
                            RecordStatus = 0,
                            TagType = 4
                        },
                        new
                        {
                            Id = new Guid("e1c89aa7-4e6d-4f43-8b04-f268cdd1d0a5"),
                            CreateById = "123abc",
                            CreatedDate = new DateTime(2024, 10, 2, 12, 58, 8, 771, DateTimeKind.Utc).AddTicks(9113),
                            Name = "Hòa đồng",
                            RecordStatus = 0,
                            TagType = 4
                        },
                        new
                        {
                            Id = new Guid("bf952303-dc7b-4793-9f24-d22bf39abd6e"),
                            CreateById = "123abc",
                            CreatedDate = new DateTime(2024, 10, 2, 12, 58, 8, 771, DateTimeKind.Utc).AddTicks(9114),
                            Name = "Năng động",
                            RecordStatus = 0,
                            TagType = 4
                        },
                        new
                        {
                            Id = new Guid("b82eb77c-8176-486e-b1f8-093689bae3d3"),
                            CreateById = "123abc",
                            CreatedDate = new DateTime(2024, 10, 2, 12, 58, 8, 771, DateTimeKind.Utc).AddTicks(9115),
                            Name = "Dễ gần",
                            RecordStatus = 0,
                            TagType = 4
                        },
                        new
                        {
                            Id = new Guid("51f59bde-22fe-44bf-9626-80c0c05c94f4"),
                            CreateById = "123abc",
                            CreatedDate = new DateTime(2024, 10, 2, 12, 58, 8, 771, DateTimeKind.Utc).AddTicks(9117),
                            Name = "Thi thoảng bất thường",
                            RecordStatus = 0,
                            TagType = 4
                        },
                        new
                        {
                            Id = new Guid("7a2f5587-118f-4aa4-93bb-f9f46b85ffd0"),
                            CreateById = "123abc",
                            CreatedDate = new DateTime(2024, 10, 2, 12, 58, 8, 771, DateTimeKind.Utc).AddTicks(9118),
                            Name = "Lạnh lùng, ít nói",
                            RecordStatus = 0,
                            TagType = 4
                        },
                        new
                        {
                            Id = new Guid("8741c577-0b21-4944-9e38-d8ce96b48b9e"),
                            CreateById = "123abc",
                            CreatedDate = new DateTime(2024, 10, 2, 12, 58, 8, 771, DateTimeKind.Utc).AddTicks(9119),
                            Name = "Nhút nhát",
                            RecordStatus = 0,
                            TagType = 4
                        },
                        new
                        {
                            Id = new Guid("4e778b7c-71cf-4b78-ae12-c080173554ce"),
                            CreateById = "123abc",
                            CreatedDate = new DateTime(2024, 10, 2, 12, 58, 8, 771, DateTimeKind.Utc).AddTicks(9122),
                            Name = "Nhạy cảm",
                            RecordStatus = 0,
                            TagType = 4
                        },
                        new
                        {
                            Id = new Guid("0c1b8083-8501-49d3-adda-32c9eafccdf3"),
                            CreateById = "123abc",
                            CreatedDate = new DateTime(2024, 10, 2, 12, 58, 8, 771, DateTimeKind.Utc).AddTicks(9124),
                            Name = "Dễ nản",
                            RecordStatus = 0,
                            TagType = 4
                        },
                        new
                        {
                            Id = new Guid("cf47b4e2-7f8f-4d3c-aa6e-841ee2f9d04c"),
                            CreateById = "123abc",
                            CreatedDate = new DateTime(2024, 10, 2, 12, 58, 8, 771, DateTimeKind.Utc).AddTicks(9125),
                            Name = "Hay bị lười",
                            RecordStatus = 0,
                            TagType = 4
                        },
                        new
                        {
                            Id = new Guid("341486ff-388a-4fe6-ad82-c3f1cbf1707b"),
                            CreateById = "123abc",
                            CreatedDate = new DateTime(2024, 10, 2, 12, 58, 8, 771, DateTimeKind.Utc).AddTicks(9126),
                            Name = "Sẵn sàng học hỏi",
                            RecordStatus = 0,
                            TagType = 4
                        },
                        new
                        {
                            Id = new Guid("55fbd02d-6ada-4db9-8c95-594b58499774"),
                            CreateById = "123abc",
                            CreatedDate = new DateTime(2024, 10, 2, 12, 58, 8, 771, DateTimeKind.Utc).AddTicks(9127),
                            Name = "Hiền lành",
                            RecordStatus = 0,
                            TagType = 4
                        },
                        new
                        {
                            Id = new Guid("a7e7dec8-23df-4b23-9955-59e4387da4b1"),
                            CreateById = "123abc",
                            CreatedDate = new DateTime(2024, 10, 2, 12, 58, 8, 771, DateTimeKind.Utc).AddTicks(9129),
                            Name = "Rảnh rỗi",
                            RecordStatus = 0,
                            TagType = 4
                        },
                        new
                        {
                            Id = new Guid("a12605f1-f2ca-4fcc-97aa-fce26516d99a"),
                            CreateById = "123abc",
                            CreatedDate = new DateTime(2024, 10, 2, 12, 58, 8, 771, DateTimeKind.Utc).AddTicks(9130),
                            Name = "Cầu toàn",
                            RecordStatus = 0,
                            TagType = 4
                        },
                        new
                        {
                            Id = new Guid("6a404cb0-ded4-4fbe-b8e4-bebd9e1c1cea"),
                            CreateById = "123abc",
                            CreatedDate = new DateTime(2024, 10, 2, 12, 58, 8, 771, DateTimeKind.Utc).AddTicks(9131),
                            Name = "Thoải mái",
                            RecordStatus = 0,
                            TagType = 4
                        },
                        new
                        {
                            Id = new Guid("5defc1ab-b478-478b-8200-ec9e8aecf063"),
                            CreateById = "123abc",
                            CreatedDate = new DateTime(2024, 10, 2, 12, 58, 8, 771, DateTimeKind.Utc).AddTicks(9134),
                            Name = "Dễ bị khó chịu",
                            RecordStatus = 0,
                            TagType = 4
                        },
                        new
                        {
                            Id = new Guid("4467e761-8019-4553-a341-d566a947481d"),
                            CreateById = "123abc",
                            CreatedDate = new DateTime(2024, 10, 2, 12, 58, 8, 771, DateTimeKind.Utc).AddTicks(9135),
                            Name = "Độc thân lâu năm",
                            RecordStatus = 0,
                            TagType = 4
                        });
                });

            modelBuilder.Entity("FitSwipe.DataAccess.Model.Entity.Training", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Feedback")
                        .HasColumnType("text");

                    b.Property<string>("PTId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double?>("Rating")
                        .HasColumnType("double precision");

                    b.Property<int>("RecordStatus")
                        .HasColumnType("integer");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<string>("TraineeId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("PTId");

                    b.HasIndex("TraineeId");

                    b.ToTable("Trainings");
                });

            modelBuilder.Entity("FitSwipe.DataAccess.Model.Entity.Transaction", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("Amount")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Method")
                        .HasColumnType("integer");

                    b.Property<int>("RecordStatus")
                        .HasColumnType("integer");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<string>("TranscationCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("UserFireBaseId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("UserFireBaseId");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("FitSwipe.DataAccess.Model.Entity.TransactionSlot", b =>
                {
                    b.Property<Guid>("SlotId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("TransactionId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<int>("RecordStatus")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("SlotId", "TransactionId");

                    b.HasIndex("TransactionId");

                    b.ToTable("TransactionSlots");
                });

            modelBuilder.Entity("FitSwipe.DataAccess.Model.Entity.User", b =>
                {
                    b.Property<string>("FireBaseId")
                        .HasColumnType("text");

                    b.Property<string>("AvatarUrl")
                        .HasColumnType("text");

                    b.Property<int?>("Balance")
                        .HasColumnType("integer");

                    b.Property<string>("Bio")
                        .HasColumnType("text");

                    b.Property<string>("City")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("District")
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Gender")
                        .HasColumnType("integer");

                    b.Property<double?>("Height")
                        .HasColumnType("double precision");

                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Job")
                        .HasColumnType("text");

                    b.Property<string>("PTDegreeImageUrl")
                        .HasColumnType("text");

                    b.Property<double?>("PTExperienceYear")
                        .HasColumnType("double precision");

                    b.Property<int?>("PTStatus")
                        .HasColumnType("integer");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.Property<double>("PricePerHour")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(10,2)")
                        .HasDefaultValue(0.0);

                    b.Property<int>("RecordStatus")
                        .HasColumnType("integer");

                    b.Property<int>("Role")
                        .HasColumnType("integer");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<string>("Street")
                        .HasColumnType("text");

                    b.Property<int?>("SubscriptionLevel")
                        .HasColumnType("integer");

                    b.Property<int?>("SubscriptionPaymentStatus")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("SubscriptionPurchasedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Ward")
                        .HasColumnType("text");

                    b.Property<double?>("Weight")
                        .HasColumnType("double precision");

                    b.HasKey("FireBaseId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            FireBaseId = "123abc",
                            AvatarUrl = "https://i.ibb.co/HYsHmpm/pt5.png",
                            Balance = 1000,
                            Bio = "Fitness enthusiast and certified personal trainer.",
                            City = "New York",
                            CreatedDate = new DateTime(2024, 10, 2, 12, 58, 8, 771, DateTimeKind.Utc).AddTicks(8702),
                            DateOfBirth = new DateTime(1990, 5, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            District = "Manhattan",
                            Email = "john.doe@example.com",
                            Gender = 0,
                            Height = 180.30000000000001,
                            Id = new Guid("95942e36-3b5d-4a11-8fc7-94668a78cd4b"),
                            Job = "Student",
                            Password = "hashedpassword1",
                            Phone = "1234567890",
                            PricePerHour = 0.0,
                            RecordStatus = 0,
                            Role = 0,
                            Status = 0,
                            Street = "5th Avenue",
                            UserName = "john doe",
                            Ward = "Ward 5",
                            Weight = 75.5
                        },
                        new
                        {
                            FireBaseId = "456def",
                            AvatarUrl = "https://i.ibb.co/ZVhq6W7/c239694df88fecb8c521de3dd8625ba10fbbfa14f3559342640b9710e25b9d01-w-1024-h-1024-pmaid-165228136.png",
                            Balance = 1500,
                            Bio = "Yoga instructor with a passion for holistic health.",
                            City = "Los Angeles",
                            CreatedDate = new DateTime(2024, 10, 2, 12, 58, 8, 771, DateTimeKind.Utc).AddTicks(8746),
                            DateOfBirth = new DateTime(1985, 8, 20, 0, 0, 0, 0, DateTimeKind.Utc),
                            District = "Beverly Hills",
                            Email = "jane.smith@example.com",
                            Gender = 1,
                            Height = 170.19999999999999,
                            Id = new Guid("9a330236-762b-4388-b2ee-1fcd13323ede"),
                            Job = "Yoga Instructor",
                            PTExperienceYear = 3.5,
                            PTStatus = 1,
                            Password = "hashedpassword2",
                            Phone = "0987654321",
                            PricePerHour = 100000.0,
                            RecordStatus = 0,
                            Role = 1,
                            Status = 0,
                            Street = "Rodeo Drive",
                            SubscriptionLevel = 1,
                            SubscriptionPaymentStatus = 0,
                            SubscriptionPurchasedDate = new DateTime(2023, 2, 10, 0, 0, 0, 0, DateTimeKind.Utc),
                            UserName = "jane smith",
                            Ward = "Ward 3",
                            Weight = 65.0
                        },
                        new
                        {
                            FireBaseId = "789ghi",
                            AvatarUrl = "https://i.ibb.co/zVGS1Xv/pt1.png",
                            Balance = 2000,
                            Bio = "Aspiring bodybuilder and nutrition expert.",
                            City = "Chicago",
                            CreatedDate = new DateTime(2024, 10, 2, 12, 58, 8, 771, DateTimeKind.Utc).AddTicks(8760),
                            DateOfBirth = new DateTime(1992, 3, 10, 0, 0, 0, 0, DateTimeKind.Utc),
                            District = "Lincoln Park",
                            Email = "alex.jones@example.com",
                            Gender = 0,
                            Height = 185.40000000000001,
                            Id = new Guid("5695900a-a998-453a-a2a3-99b28dd05a38"),
                            Job = "Nutritionist",
                            PTExperienceYear = 2.0,
                            PTStatus = 1,
                            Password = "hashedpassword3",
                            Phone = "5551234567",
                            PricePerHour = 150000.0,
                            RecordStatus = 0,
                            Role = 1,
                            Status = 0,
                            Street = "Clark Street",
                            UserName = "alex jones",
                            Ward = "Ward 7",
                            Weight = 85.0
                        },
                        new
                        {
                            FireBaseId = "101jkl",
                            AvatarUrl = "https://i.ibb.co/QY6zDfp/pt3.png",
                            Balance = 3500,
                            Bio = "Certified yoga instructor and personal trainer with 5 years of experience.",
                            City = "New York",
                            CreatedDate = new DateTime(2024, 10, 2, 12, 58, 8, 771, DateTimeKind.Utc).AddTicks(8776),
                            DateOfBirth = new DateTime(1988, 7, 15, 0, 0, 0, 0, DateTimeKind.Utc),
                            District = "Manhattan",
                            Email = "sarah.smith@example.com",
                            Gender = 0,
                            Height = 170.19999999999999,
                            Id = new Guid("084ca32e-04cc-4465-ba14-96ee38037a77"),
                            Job = "Yoga Instructor",
                            PTExperienceYear = 5.0,
                            PTStatus = 1,
                            Password = "hashedpassword4",
                            Phone = "5559876543",
                            PricePerHour = 200000.0,
                            RecordStatus = 0,
                            Role = 1,
                            Status = 0,
                            Street = "Broadway",
                            UserName = "jocker_lol",
                            Ward = "Ward 3",
                            Weight = 62.5
                        },
                        new
                        {
                            FireBaseId = "202mno",
                            AvatarUrl = "https://i.ibb.co/27LXG3q/pt4.png",
                            Balance = 2800,
                            Bio = "CrossFit enthusiast and certified personal trainer specializing in HIIT workouts.",
                            City = "Los Angeles",
                            CreatedDate = new DateTime(2024, 10, 2, 12, 58, 8, 771, DateTimeKind.Utc).AddTicks(8781),
                            DateOfBirth = new DateTime(1995, 11, 22, 0, 0, 0, 0, DateTimeKind.Utc),
                            District = "Santa Monica",
                            Email = "mike.johnson@example.com",
                            Gender = 0,
                            Height = 180.0,
                            Id = new Guid("4d78820e-9137-4756-90e0-a2a0a615c42f"),
                            Job = "CrossFit Trainer",
                            PTExperienceYear = 3.5,
                            PTStatus = 1,
                            Password = "hashedpassword5",
                            Phone = "5552468101",
                            PricePerHour = 180000.0,
                            RecordStatus = 0,
                            Role = 1,
                            Status = 0,
                            Street = "Ocean Avenue",
                            UserName = "mike_johnson",
                            Ward = "Ward 2",
                            Weight = 78.299999999999997
                        },
                        new
                        {
                            FireBaseId = "303pqr",
                            AvatarUrl = "https://i.ibb.co/TWNFj0M/image.png",
                            Balance = 4200,
                            Bio = "Sports nutritionist and strength training coach with a focus on women's fitness.",
                            City = "Seattle",
                            CreatedDate = new DateTime(2024, 10, 2, 12, 58, 8, 771, DateTimeKind.Utc).AddTicks(8786),
                            DateOfBirth = new DateTime(1990, 5, 8, 0, 0, 0, 0, DateTimeKind.Utc),
                            District = "Capitol Hill",
                            Email = "emma.davis@example.com",
                            Gender = 1,
                            Height = 165.5,
                            Id = new Guid("57b432da-b170-4c77-9aa8-db46e9add976"),
                            Job = "Strength Coach",
                            PTExperienceYear = 7.0,
                            PTStatus = 1,
                            Password = "hashedpassword6",
                            Phone = "5553691470",
                            PricePerHour = 220000.0,
                            RecordStatus = 0,
                            Role = 1,
                            Status = 0,
                            Street = "Pike Street",
                            UserName = "emma_davis",
                            Ward = "Ward 5",
                            Weight = 58.700000000000003
                        },
                        new
                        {
                            FireBaseId = "404stu",
                            AvatarUrl = "https://i.ibb.co/mR8n9zJ/pt2.png",
                            Balance = 3800,
                            Bio = "Former professional soccer player turned fitness coach. Specializes in sports-specific training.",
                            City = "Miami",
                            CreatedDate = new DateTime(2024, 10, 2, 12, 58, 8, 771, DateTimeKind.Utc).AddTicks(8795),
                            DateOfBirth = new DateTime(1987, 9, 30, 0, 0, 0, 0, DateTimeKind.Utc),
                            District = "South Beach",
                            Email = "carlos.rodriguez@example.com",
                            Gender = 0,
                            Height = 175.30000000000001,
                            Id = new Guid("bbf9a758-875b-4ba3-93d6-23b9657cd3ef"),
                            Job = "Sports Performance Coach",
                            PTExperienceYear = 6.5,
                            PTStatus = 1,
                            Password = "hashedpassword7",
                            Phone = "5557891234",
                            PricePerHour = 190000.0,
                            RecordStatus = 0,
                            Role = 1,
                            Status = 0,
                            Street = "Ocean Drive",
                            UserName = "carlos_rodriguez",
                            Ward = "Ward 4",
                            Weight = 75.799999999999997
                        },
                        new
                        {
                            FireBaseId = "505vwx",
                            AvatarUrl = "https://i.ibb.co/dDrHRqL/40c820d3e9d438025d4def0dedeab78a883cb8ab8c34614d1fb7d5ddf147668e-w-1024-h-1024-pmaid-165229888.png",
                            Balance = 3200,
                            Bio = "Pilates instructor and rehabilitation specialist. Focused on posture correction and core strength.",
                            City = "San Francisco",
                            CreatedDate = new DateTime(2024, 10, 2, 12, 58, 8, 771, DateTimeKind.Utc).AddTicks(8799),
                            DateOfBirth = new DateTime(1993, 2, 14, 0, 0, 0, 0, DateTimeKind.Utc),
                            District = "Marina",
                            Email = "lisa.chen@example.com",
                            Gender = 1,
                            Height = 162.0,
                            Id = new Guid("7f813e50-a525-4853-8d95-68d5c2ab83a5"),
                            Job = "Pilates Instructor",
                            PTExperienceYear = 4.0,
                            PTStatus = 1,
                            Password = "hashedpassword8",
                            Phone = "5554567890",
                            PricePerHour = 175000.0,
                            RecordStatus = 0,
                            Role = 1,
                            Status = 0,
                            Street = "Chestnut Street",
                            UserName = "lisa_chen",
                            Ward = "Ward 2",
                            Weight = 54.200000000000003
                        },
                        new
                        {
                            FireBaseId = "606yza",
                            AvatarUrl = "https://i.ibb.co/QY6zDfp/pt3.png",
                            Balance = 4500,
                            Bio = "Bodybuilding champion and powerlifting coach. Specializes in muscle gain and strength training.",
                            City = "Houston",
                            CreatedDate = new DateTime(2024, 10, 2, 12, 58, 8, 771, DateTimeKind.Utc).AddTicks(8804),
                            DateOfBirth = new DateTime(1985, 8, 5, 0, 0, 0, 0, DateTimeKind.Utc),
                            District = "Midtown",
                            Email = "marcus.brown@example.com",
                            Gender = 0,
                            Height = 188.0,
                            Id = new Guid("4eb3f97f-8afb-477d-a701-b0863812f538"),
                            Job = "Strength and Conditioning Coach",
                            PTExperienceYear = 10.0,
                            PTStatus = 1,
                            Password = "hashedpassword9",
                            Phone = "5552345678",
                            PricePerHour = 230000.0,
                            RecordStatus = 0,
                            Role = 1,
                            Status = 0,
                            Street = "Main Street",
                            UserName = "marcus_brown",
                            Ward = "Ward 3",
                            Weight = 90.5
                        },
                        new
                        {
                            FireBaseId = "707bcd",
                            AvatarUrl = "https://i.ibb.co/HYsHmpm/pt5.png",
                            Balance = 3900,
                            Bio = "Certified nutritionist and functional fitness trainer. Specializes in weight management and holistic health.",
                            City = "Boston",
                            CreatedDate = new DateTime(2024, 10, 2, 12, 58, 8, 771, DateTimeKind.Utc).AddTicks(8808),
                            DateOfBirth = new DateTime(1991, 12, 18, 0, 0, 0, 0, DateTimeKind.Utc),
                            District = "Back Bay",
                            Email = "will.taylor@example.com",
                            Gender = 0,
                            Height = 168.5,
                            Id = new Guid("ee7620cb-0dd8-4759-a4c7-11d932e85bc3"),
                            Job = "Functional Fitness Trainer",
                            PTExperienceYear = 3.5,
                            PTStatus = 1,
                            Password = "hashedpassword10",
                            Phone = "5558765432",
                            PricePerHour = 195000.0,
                            RecordStatus = 0,
                            Role = 1,
                            Status = 0,
                            Street = "Newbury Street",
                            UserName = "will_taylor",
                            Ward = "Ward 5",
                            Weight = 60.100000000000001
                        });
                });

            modelBuilder.Entity("FitSwipe.DataAccess.Model.Entity.UserMedia", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("MediaUrl")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("RecordStatus")
                        .HasColumnType("integer");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserMedias");
                });

            modelBuilder.Entity("FitSwipe.DataAccess.Model.Entity.UserTag", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("RecordStatus")
                        .HasColumnType("integer");

                    b.Property<Guid>("TagId")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("TagId");

                    b.HasIndex("UserId");

                    b.ToTable("UserTags");
                });

            modelBuilder.Entity("FitSwipe.DataAccess.Model.Entity.FeedbackImage", b =>
                {
                    b.HasOne("FitSwipe.DataAccess.Model.Entity.Training", "Training")
                        .WithMany("FeedbackImages")
                        .HasForeignKey("TrainingId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Training");
                });

            modelBuilder.Entity("FitSwipe.DataAccess.Model.Entity.Report", b =>
                {
                    b.HasOne("FitSwipe.DataAccess.Model.Entity.User", "Reporter")
                        .WithMany("ReportsCreated")
                        .HasForeignKey("ReporterId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("FitSwipe.DataAccess.Model.Entity.User", "Target")
                        .WithMany("ReportsReceived")
                        .HasForeignKey("TargetId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Reporter");

                    b.Navigation("Target");
                });

            modelBuilder.Entity("FitSwipe.DataAccess.Model.Entity.ReportImage", b =>
                {
                    b.HasOne("FitSwipe.DataAccess.Model.Entity.Report", "Report")
                        .WithMany("ReportImages")
                        .HasForeignKey("ReportId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Report");
                });

            modelBuilder.Entity("FitSwipe.DataAccess.Model.Entity.Slot", b =>
                {
                    b.HasOne("FitSwipe.DataAccess.Model.Entity.User", "CreateBy")
                        .WithMany("SlotsCreated")
                        .HasForeignKey("CreateById")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("FitSwipe.DataAccess.Model.Entity.Training", "Training")
                        .WithMany("Slots")
                        .HasForeignKey("TrainingId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("CreateBy");

                    b.Navigation("Training");
                });

            modelBuilder.Entity("FitSwipe.DataAccess.Model.Entity.SlotVideos", b =>
                {
                    b.HasOne("FitSwipe.DataAccess.Model.Entity.Slot", "Slot")
                        .WithMany("Videos")
                        .HasForeignKey("SlotId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Slot");
                });

            modelBuilder.Entity("FitSwipe.DataAccess.Model.Entity.Tag", b =>
                {
                    b.HasOne("FitSwipe.DataAccess.Model.Entity.User", "CreateBy")
                        .WithMany("TagsCreated")
                        .HasForeignKey("CreateById")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CreateBy");
                });

            modelBuilder.Entity("FitSwipe.DataAccess.Model.Entity.Training", b =>
                {
                    b.HasOne("FitSwipe.DataAccess.Model.Entity.User", "PT")
                        .WithMany("TrainingsInstructing")
                        .HasForeignKey("PTId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("FitSwipe.DataAccess.Model.Entity.User", "Trainee")
                        .WithMany("TrainingsAttending")
                        .HasForeignKey("TraineeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("PT");

                    b.Navigation("Trainee");
                });

            modelBuilder.Entity("FitSwipe.DataAccess.Model.Entity.Transaction", b =>
                {
                    b.HasOne("FitSwipe.DataAccess.Model.Entity.User", "User")
                        .WithMany("Transactions")
                        .HasForeignKey("UserFireBaseId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("FitSwipe.DataAccess.Model.Entity.TransactionSlot", b =>
                {
                    b.HasOne("FitSwipe.DataAccess.Model.Entity.Slot", "Slot")
                        .WithMany("TransactionSlots")
                        .HasForeignKey("SlotId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FitSwipe.DataAccess.Model.Entity.Transaction", "Transaction")
                        .WithMany("TransactionSlots")
                        .HasForeignKey("TransactionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Slot");

                    b.Navigation("Transaction");
                });

            modelBuilder.Entity("FitSwipe.DataAccess.Model.Entity.UserMedia", b =>
                {
                    b.HasOne("FitSwipe.DataAccess.Model.Entity.User", "User")
                        .WithMany("UserMedias")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("FitSwipe.DataAccess.Model.Entity.UserTag", b =>
                {
                    b.HasOne("FitSwipe.DataAccess.Model.Entity.Tag", "Tag")
                        .WithMany("UserTags")
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("FitSwipe.DataAccess.Model.Entity.User", "User")
                        .WithMany("UserTags")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Tag");

                    b.Navigation("User");
                });

            modelBuilder.Entity("FitSwipe.DataAccess.Model.Entity.Report", b =>
                {
                    b.Navigation("ReportImages");
                });

            modelBuilder.Entity("FitSwipe.DataAccess.Model.Entity.Slot", b =>
                {
                    b.Navigation("TransactionSlots");

                    b.Navigation("Videos");
                });

            modelBuilder.Entity("FitSwipe.DataAccess.Model.Entity.Tag", b =>
                {
                    b.Navigation("UserTags");
                });

            modelBuilder.Entity("FitSwipe.DataAccess.Model.Entity.Training", b =>
                {
                    b.Navigation("FeedbackImages");

                    b.Navigation("Slots");
                });

            modelBuilder.Entity("FitSwipe.DataAccess.Model.Entity.Transaction", b =>
                {
                    b.Navigation("TransactionSlots");
                });

            modelBuilder.Entity("FitSwipe.DataAccess.Model.Entity.User", b =>
                {
                    b.Navigation("ReportsCreated");

                    b.Navigation("ReportsReceived");

                    b.Navigation("SlotsCreated");

                    b.Navigation("TagsCreated");

                    b.Navigation("TrainingsAttending");

                    b.Navigation("TrainingsInstructing");

                    b.Navigation("Transactions");

                    b.Navigation("UserMedias");

                    b.Navigation("UserTags");
                });
#pragma warning restore 612, 618
        }
    }
}
