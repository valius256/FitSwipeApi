// <auto-generated />
using System;
using FitSwipe.DataAccess.Model;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace FitSwipe.DataAccess.Migrations
{
    [DbContext(typeof(FitSwipeDbContext))]
    [Migration("20241006074319_Add_PricePerSlot_For_Training")]
    partial class Add_PricePerSlot_For_Training
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("FitSwipe.DataAccess.Model.Entity.EmailTemplate", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Body")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Params")
                        .HasColumnType("text");

                    b.Property<int>("RecordStatus")
                        .HasColumnType("integer");

                    b.Property<bool>("Status")
                        .HasColumnType("boolean");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("EmailTemplates");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a09462a9-397c-4a59-8fe1-985a78800a3d"),
                            Body = "Chào mừng bạn đến với FitWipe! Kính gửi [Name], vui lòng xác nhận địa chỉ email của bạn bằng cách nhấn vào đường link sau: <a href=\"[VerificationLink]\">Xác nhận Email</a>.<br><br>Cảm ơn bạn đã tham gia cùng chúng tôi!<br><br>Đội ngũ FitWipe",
                            CreatedDate = new DateTime(2024, 10, 6, 7, 43, 19, 306, DateTimeKind.Utc).AddTicks(7287),
                            Description = "Email này được gửi để xác nhận đăng ký tài khoản FitWipe.",
                            Name = "Register_Mail",
                            Params = "[Name], [VerificationLink]",
                            RecordStatus = 0,
                            Status = true,
                            Subject = "Chào mừng đến với FitWipe! Vui lòng xác nhận email của bạn"
                        },
                        new
                        {
                            Id = new Guid("9897dcd4-39e9-403b-beb5-ffe5aa28e888"),
                            Body = "Chúng tôi đã nhận được yêu cầu đặt lại mật khẩu cho tài khoản của bạn tại FitWipe. Kính gửi [Name], vui lòng đặt lại mật khẩu của bạn bằng cách nhấn vào đường link sau: <a href=\"[ResetPasswordLink]\">Đặt lại mật khẩu</a>.<br><br>Nếu bạn không yêu cầu việc này, vui lòng bỏ qua email này.<br><br>Đội ngũ FitWipe",
                            CreatedDate = new DateTime(2024, 10, 6, 7, 43, 19, 306, DateTimeKind.Utc).AddTicks(7339),
                            Description = "Email này được gửi khi người dùng yêu cầu đặt lại mật khẩu cho tài khoản FitWipe.",
                            Name = "Forgot_Password",
                            Params = "[Name], [ResetPasswordLink]",
                            RecordStatus = 0,
                            Status = true,
                            Subject = "Yêu cầu đặt lại mật khẩu FitWipe"
                        });
                });

            modelBuilder.Entity("FitSwipe.DataAccess.Model.Entity.FeedbackImage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("MediaUrl")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("RecordStatus")
                        .HasColumnType("integer");

                    b.Property<Guid>("TrainingId")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("TrainingId");

                    b.ToTable("FeedbackImages");
                });

            modelBuilder.Entity("FitSwipe.DataAccess.Model.Entity.Report", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Reason")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("RecordStatus")
                        .HasColumnType("integer");

                    b.Property<string>("ReporterId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<string>("TargetId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("ReporterId");

                    b.HasIndex("TargetId");

                    b.ToTable("Reports");
                });

            modelBuilder.Entity("FitSwipe.DataAccess.Model.Entity.ReportImage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("MediaUrl")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("RecordStatus")
                        .HasColumnType("integer");

                    b.Property<Guid>("ReportId")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("ReportId");

                    b.ToTable("ReportImages");
                });

            modelBuilder.Entity("FitSwipe.DataAccess.Model.Entity.Slot", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Content")
                        .HasColumnType("text");

                    b.Property<string>("CreateById")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Feedback")
                        .HasColumnType("text");

                    b.Property<string>("Location")
                        .HasColumnType("text");

                    b.Property<int?>("PaymentStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(1);

                    b.Property<double?>("Rating")
                        .HasColumnType("double precision");

                    b.Property<int>("RecordStatus")
                        .HasColumnType("integer");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0);

                    b.Property<Guid?>("TrainingId")
                        .HasColumnType("uuid");

                    b.Property<int?>("Type")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("CreateById");

                    b.HasIndex("TrainingId");

                    b.ToTable("Slots");
                });

            modelBuilder.Entity("FitSwipe.DataAccess.Model.Entity.SlotVideos", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("RecordStatus")
                        .HasColumnType("integer");

                    b.Property<Guid>("SlotId")
                        .HasColumnType("uuid");

                    b.Property<string>("ThumbnailUrl")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("VideoUrl")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("SlotId");

                    b.ToTable("SlotVideos");
                });

            modelBuilder.Entity("FitSwipe.DataAccess.Model.Entity.Tag", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("CreateById")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("RecordStatus")
                        .HasColumnType("integer");

                    b.Property<int?>("SpecialTag")
                        .HasColumnType("integer");

                    b.Property<string>("TagImage")
                        .HasColumnType("text");

                    b.Property<int>("TagType")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("CreateById");

                    b.ToTable("Tags");

                    b.HasData(
                        new
                        {
                            Id = new Guid("79236e17-fe1f-4382-bc2e-6a22b3e6e07c"),
                            CreateById = "123abc",
                            CreatedDate = new DateTime(2024, 10, 6, 7, 43, 19, 306, DateTimeKind.Utc).AddTicks(7107),
                            Name = "Bóng đá",
                            RecordStatus = 0,
                            TagImage = "https://cdn.tuoitre.vn/ttct//2020/12/13/16078750289060-lich-thi-dau-bong-da-hom-nay-0211.jpg",
                            TagType = 0
                        },
                        new
                        {
                            Id = new Guid("f348b46a-539b-4e0f-9c3a-7fd7a15a2fe4"),
                            CreateById = "123abc",
                            CreatedDate = new DateTime(2024, 10, 6, 7, 43, 19, 306, DateTimeKind.Utc).AddTicks(7111),
                            Name = "Bơi lội",
                            RecordStatus = 0,
                            TagImage = "https://file.hstatic.net/1000391576/file/boi_loi_7d4d69c53ac1494eabb2a446d4d503a0_grande.jpg",
                            TagType = 0
                        },
                        new
                        {
                            Id = new Guid("8d980ec3-d3da-43a6-a8d7-1b4c8dfb01b6"),
                            CreateById = "123abc",
                            CreatedDate = new DateTime(2024, 10, 6, 7, 43, 19, 306, DateTimeKind.Utc).AddTicks(7112),
                            Name = "Cầu Lông",
                            RecordStatus = 0,
                            TagImage = "https://vecgroup.vn/images/products/2021/08/24/large/qua-cau-long_1629778779.jpg",
                            TagType = 0
                        },
                        new
                        {
                            Id = new Guid("bfe59242-8e71-42b6-9081-ad785c8b3486"),
                            CreateById = "123abc",
                            CreatedDate = new DateTime(2024, 10, 6, 7, 43, 19, 306, DateTimeKind.Utc).AddTicks(7114),
                            Name = "Bóng chuyền",
                            RecordStatus = 0,
                            TagImage = "https://file.hstatic.net/200000333667/article/image.jpg_4b1e1c8ce20f4c32824f275f34ff30af_1024x1024.jpg",
                            TagType = 0
                        },
                        new
                        {
                            Id = new Guid("1cb5f947-291b-4189-b680-36d6a9572e65"),
                            CreateById = "123abc",
                            CreatedDate = new DateTime(2024, 10, 6, 7, 43, 19, 306, DateTimeKind.Utc).AddTicks(7117),
                            Name = "Bóng rổ",
                            RecordStatus = 0,
                            TagImage = "https://thethaothienlong.vn/wp-content/uploads/2022/04/Kich-thuoc-qua-bong-ro-1.jpg",
                            TagType = 0
                        },
                        new
                        {
                            Id = new Guid("f0d91cfe-dfad-4dc1-82b7-6b4a1aa4d9d1"),
                            CreateById = "123abc",
                            CreatedDate = new DateTime(2024, 10, 6, 7, 43, 19, 306, DateTimeKind.Utc).AddTicks(7119),
                            Name = "Thể thao nói chung",
                            RecordStatus = 0,
                            TagImage = "https://llv.edu.vn/media/2018/09/iStock-949190756-800x440.jpg",
                            TagType = 0
                        },
                        new
                        {
                            Id = new Guid("05890b90-ff66-448a-bf5c-c6d7141b1ba3"),
                            CreateById = "123abc",
                            CreatedDate = new DateTime(2024, 10, 6, 7, 43, 19, 306, DateTimeKind.Utc).AddTicks(7120),
                            Name = "Bida",
                            RecordStatus = 0,
                            TagImage = "https://billiardshoanthuy.vn/wp-content/uploads/2021/05/phu-kien-ban-bida-2.jpg",
                            TagType = 0
                        },
                        new
                        {
                            Id = new Guid("6a6fa207-d3ad-4fae-b641-552b32aeee53"),
                            CreateById = "123abc",
                            CreatedDate = new DateTime(2024, 10, 6, 7, 43, 19, 306, DateTimeKind.Utc).AddTicks(7122),
                            Name = "Tập Gym",
                            RecordStatus = 0,
                            TagImage = "https://tiki.vn/blog/wp-content/uploads/2023/07/elite-fitness-1024x583.jpg",
                            TagType = 0
                        },
                        new
                        {
                            Id = new Guid("5bad94de-2459-48e8-bf9f-2669d56f5707"),
                            CreateById = "123abc",
                            CreatedDate = new DateTime(2024, 10, 6, 7, 43, 19, 306, DateTimeKind.Utc).AddTicks(7123),
                            Name = "Đi, chạy bộ",
                            RecordStatus = 0,
                            TagImage = "https://pos.nvncdn.com/be3294-43017/art/artCT/20230228_9uObLfWys7Q0IXe4.jpg",
                            TagType = 0
                        },
                        new
                        {
                            Id = new Guid("cb616407-a5db-4f3e-80c5-dd041f3be4e9"),
                            CreateById = "123abc",
                            CreatedDate = new DateTime(2024, 10, 6, 7, 43, 19, 306, DateTimeKind.Utc).AddTicks(7124),
                            Name = "Phim ảnh",
                            RecordStatus = 0,
                            TagImage = "https://lawnet.vn/uploads/image/2023/10/17/015815855.jpg",
                            TagType = 0
                        },
                        new
                        {
                            Id = new Guid("71230e63-8f0c-4eb9-902a-a169b195d73f"),
                            CreateById = "123abc",
                            CreatedDate = new DateTime(2024, 10, 6, 7, 43, 19, 306, DateTimeKind.Utc).AddTicks(7126),
                            Name = "Truyện tranh",
                            RecordStatus = 0,
                            TagImage = "https://taschen.makaira.media/taschen/image/upload/f_webp,w_1200/v1673462260/products-live/a3d446fb0046b587eb0ed76edca3f4d6.jpg",
                            TagType = 0
                        },
                        new
                        {
                            Id = new Guid("83c6bd6f-ab3a-43f3-8464-9a5eb52ffee9"),
                            CreateById = "123abc",
                            CreatedDate = new DateTime(2024, 10, 6, 7, 43, 19, 306, DateTimeKind.Utc).AddTicks(7127),
                            Name = "Du lịch",
                            RecordStatus = 0,
                            TagImage = "https://dynamic-media-cdn.tripadvisor.com/media/photo-o/18/4f/7d/fc/caption.jpg?w=1200&h=1200&s=1",
                            TagType = 0
                        },
                        new
                        {
                            Id = new Guid("70b03f5b-ac6e-45d5-a1fb-fe19e8d9e06c"),
                            CreateById = "123abc",
                            CreatedDate = new DateTime(2024, 10, 6, 7, 43, 19, 306, DateTimeKind.Utc).AddTicks(7130),
                            Name = "Thể thao trí tuệ",
                            RecordStatus = 0,
                            TagImage = "https://upload.wikimedia.org/wikipedia/commons/thumb/6/6f/ChessSet.jpg/640px-ChessSet.jpg",
                            TagType = 0
                        },
                        new
                        {
                            Id = new Guid("38a54284-e1a4-4e57-adbd-14d0ff362269"),
                            CreateById = "123abc",
                            CreatedDate = new DateTime(2024, 10, 6, 7, 43, 19, 306, DateTimeKind.Utc).AddTicks(7131),
                            Name = "Đọc sách",
                            RecordStatus = 0,
                            TagImage = "https://images.theconversation.com/files/45159/original/rptgtpxd-1396254731.jpg?ixlib=rb-4.1.0&q=45&auto=format&w=1356&h=668&fit=crop",
                            TagType = 0
                        },
                        new
                        {
                            Id = new Guid("94103628-8339-4ce8-bd56-ec8fdcc5ba11"),
                            CreateById = "123abc",
                            CreatedDate = new DateTime(2024, 10, 6, 7, 43, 19, 306, DateTimeKind.Utc).AddTicks(7132),
                            Name = "Khoa học",
                            RecordStatus = 0,
                            TagImage = "https://www.training.com.au/wp-content/uploads/science-stem-feature.png",
                            TagType = 0
                        },
                        new
                        {
                            Id = new Guid("7ca2d7b4-7f7d-4dc2-96fb-cc91066e35b8"),
                            CreateById = "123abc",
                            CreatedDate = new DateTime(2024, 10, 6, 7, 43, 19, 306, DateTimeKind.Utc).AddTicks(7134),
                            Name = "Game",
                            RecordStatus = 0,
                            TagImage = "https://genk.mediacdn.vn/139269124445442048/2022/7/28/tmb-1658998970448906989995.jpg",
                            TagType = 0
                        },
                        new
                        {
                            Id = new Guid("7479e06c-4f33-4a4c-b7bd-996fc6e3bca9"),
                            CreateById = "123abc",
                            CreatedDate = new DateTime(2024, 10, 6, 7, 43, 19, 306, DateTimeKind.Utc).AddTicks(7135),
                            Name = "Nhiếp ảnh",
                            RecordStatus = 0,
                            TagImage = "https://aaftonline.com/blog/wp-content/uploads/2024/01/What-are-the-Benefits-of-Photography-Complete-Overview.png",
                            TagType = 0
                        },
                        new
                        {
                            Id = new Guid("16ab40c9-6143-4632-a802-c235db7e5d0f"),
                            CreateById = "123abc",
                            CreatedDate = new DateTime(2024, 10, 6, 7, 43, 19, 306, DateTimeKind.Utc).AddTicks(7136),
                            Name = "Hội họa",
                            RecordStatus = 0,
                            TagImage = "https://upload.wikimedia.org/wikipedia/commons/thumb/e/ea/Van_Gogh_-_Starry_Night_-_Google_Art_Project.jpg/1200px-Van_Gogh_-_Starry_Night_-_Google_Art_Project.jpg",
                            TagType = 0
                        },
                        new
                        {
                            Id = new Guid("dfe30c50-675b-4192-8e97-63c9050aa668"),
                            CreateById = "123abc",
                            CreatedDate = new DateTime(2024, 10, 6, 7, 43, 19, 306, DateTimeKind.Utc).AddTicks(7138),
                            Name = "Nghe nhạc",
                            RecordStatus = 0,
                            TagImage = "https://static.vecteezy.com/system/resources/thumbnails/037/044/052/small_2x/ai-generated-studio-shot-of-black-headphones-over-music-note-explosion-background-with-empty-space-for-text-photo.jpg",
                            TagType = 0
                        },
                        new
                        {
                            Id = new Guid("1d25b391-6df0-4da3-9184-622e9274de6b"),
                            CreateById = "123abc",
                            CreatedDate = new DateTime(2024, 10, 6, 7, 43, 19, 306, DateTimeKind.Utc).AddTicks(7139),
                            Name = "Chơi nhạc cụ",
                            RecordStatus = 0,
                            TagImage = "https://t3.ftcdn.net/jpg/01/34/38/92/360_F_134389281_5Jak3tbsoDggHIfIKKwJ8L7064ACIMNE.jpg",
                            TagType = 0
                        },
                        new
                        {
                            Id = new Guid("607b9ea0-6a51-47c3-a57d-e246a2d5b1c5"),
                            CreateById = "123abc",
                            CreatedDate = new DateTime(2024, 10, 6, 7, 43, 19, 306, DateTimeKind.Utc).AddTicks(7143),
                            Name = "Tán gẫu",
                            RecordStatus = 0,
                            TagImage = "https://transcode-v2.app.engoo.com/image/fetch/f_auto,c_lfill,w_300,dpr_3/https://assets.app.engoo.com/images/rGTEEA2fm66YMzeJz2UbwkKOW62bZVlqKOKZrXlMN7g.jpeg",
                            TagType = 0
                        },
                        new
                        {
                            Id = new Guid("5ad3fa2a-34cc-4db1-bd11-badf1bfdeb6b"),
                            CreateById = "123abc",
                            CreatedDate = new DateTime(2024, 10, 6, 7, 43, 19, 306, DateTimeKind.Utc).AddTicks(7144),
                            Name = "Công nghệ",
                            RecordStatus = 0,
                            TagImage = "https://www.simplilearn.com/ice9/free_resources_article_thumb/Technology_Trends.jpg",
                            TagType = 0
                        },
                        new
                        {
                            Id = new Guid("3dfd865b-29c0-407e-9669-a88c36d8d7ca"),
                            CreateById = "123abc",
                            CreatedDate = new DateTime(2024, 10, 6, 7, 43, 19, 306, DateTimeKind.Utc).AddTicks(7145),
                            Name = "Lịch Sử",
                            RecordStatus = 0,
                            TagImage = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRWz_tIgvQXPAaSmvYa7CqZo_biaRK9D_O8uA&s",
                            TagType = 0
                        },
                        new
                        {
                            Id = new Guid("f1e6243b-2826-4ba7-928a-75a036e0ff22"),
                            CreateById = "123abc",
                            CreatedDate = new DateTime(2024, 10, 6, 7, 43, 19, 306, DateTimeKind.Utc).AddTicks(7147),
                            Name = "Địa lý",
                            RecordStatus = 0,
                            TagImage = "https://www.aag.org/wp-content/uploads/2021/12/shutterstock_1111879247.jpg",
                            TagType = 0
                        },
                        new
                        {
                            Id = new Guid("21cf4f6a-1757-4d5a-814f-d867be8b90f3"),
                            CreateById = "123abc",
                            CreatedDate = new DateTime(2024, 10, 6, 7, 43, 19, 306, DateTimeKind.Utc).AddTicks(7148),
                            Name = "Triết học",
                            RecordStatus = 0,
                            TagImage = "https://www.rollingstone.com/wp-content/uploads/2024/01/unlocking_the_power_why_you_should_consider_hiring_philosophy_graduates-.jpg",
                            TagType = 0
                        },
                        new
                        {
                            Id = new Guid("bb8331f0-d5af-413d-9ba1-c0a250a26d8a"),
                            CreateById = "123abc",
                            CreatedDate = new DateTime(2024, 10, 6, 7, 43, 19, 306, DateTimeKind.Utc).AddTicks(7149),
                            Name = "Sống Ảo",
                            RecordStatus = 0,
                            TagImage = "https://imagev3.vietnamplus.vn/w1000/Uploaded/2024/hotnnz/2024_08_13/song-ao3-6646.jpg.webp",
                            TagType = 0
                        },
                        new
                        {
                            Id = new Guid("8650da68-06bf-4abd-9bf5-fd1ce302790e"),
                            CreateById = "123abc",
                            CreatedDate = new DateTime(2024, 10, 6, 7, 43, 19, 306, DateTimeKind.Utc).AddTicks(7151),
                            Name = "Quản lý cân nặng",
                            RecordStatus = 0,
                            TagImage = "https://thanhnien.mediacdn.vn/Uploaded/minhnguyet/2022_05_10/an-kieng-9141.jpg",
                            TagType = 1
                        },
                        new
                        {
                            Id = new Guid("7b47d3dc-5ed7-4987-aadc-eceba4b6eee0"),
                            CreateById = "123abc",
                            CreatedDate = new DateTime(2024, 10, 6, 7, 43, 19, 306, DateTimeKind.Utc).AddTicks(7152),
                            Name = "Phát triển cơ bắp",
                            RecordStatus = 0,
                            TagImage = "https://www.dmoose.com/cdn/shop/articles/feature-image_87a28752-6da3-4be8-8814-d5221236136d.jpg?v=1676644951",
                            TagType = 1
                        },
                        new
                        {
                            Id = new Guid("2f83a40e-2bc9-4986-b432-7fc719f09e9e"),
                            CreateById = "123abc",
                            CreatedDate = new DateTime(2024, 10, 6, 7, 43, 19, 306, DateTimeKind.Utc).AddTicks(7155),
                            Name = "Có body chuẩn chỉnh",
                            RecordStatus = 0,
                            TagImage = "https://cdn.nhathuoclongchau.com.vn/unsafe/800x0/https://cms-prod.s3-sgn09.fptcloud.com/fitness_la_gi_loi_ich_va_phuong_phap_tap_luyen_fitness_1_3c4e094223.png",
                            TagType = 1
                        },
                        new
                        {
                            Id = new Guid("a9199340-687e-4252-8784-8aee0eea0782"),
                            CreateById = "123abc",
                            CreatedDate = new DateTime(2024, 10, 6, 7, 43, 19, 306, DateTimeKind.Utc).AddTicks(7156),
                            Name = "Phòng tránh bệnh",
                            RecordStatus = 0,
                            TagImage = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQv509Yw7GUN5twNNk4G5Pvu1TBqFmhrL_3UQ&s",
                            TagType = 1
                        },
                        new
                        {
                            Id = new Guid("4beeb98a-9a91-41d0-9fbb-c0087a07e3fb"),
                            CreateById = "123abc",
                            CreatedDate = new DateTime(2024, 10, 6, 7, 43, 19, 306, DateTimeKind.Utc).AddTicks(7157),
                            Name = "Cải thiện tình trạng bệnh",
                            RecordStatus = 0,
                            TagImage = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQv509Yw7GUN5twNNk4G5Pvu1TBqFmhrL_3UQ&s",
                            TagType = 1
                        },
                        new
                        {
                            Id = new Guid("238af788-8505-4736-94bc-b02974891cc8"),
                            CreateById = "123abc",
                            CreatedDate = new DateTime(2024, 10, 6, 7, 43, 19, 306, DateTimeKind.Utc).AddTicks(7159),
                            Name = "Tăng cảm giác hạnh phúc, giảm căng thẳng",
                            RecordStatus = 0,
                            TagImage = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcT8ZXc_bemAYbupxmGz0pZGy4L1Zr6hGVsYdA&s",
                            TagType = 1
                        },
                        new
                        {
                            Id = new Guid("17b071c9-d55c-4d26-bcf6-b687bd06a970"),
                            CreateById = "123abc",
                            CreatedDate = new DateTime(2024, 10, 6, 7, 43, 19, 306, DateTimeKind.Utc).AddTicks(7160),
                            Name = "Cải thiện sự dẻo dai",
                            RecordStatus = 0,
                            TagImage = "https://cdn.shopify.com/s/files/1/0453/0381/files/fullsizeoutput_2d4_1024x1024.jpg?v=1662646979",
                            TagType = 1
                        },
                        new
                        {
                            Id = new Guid("9b8699ba-4196-4adb-b905-679ed35ca9df"),
                            CreateById = "123abc",
                            CreatedDate = new DateTime(2024, 10, 6, 7, 43, 19, 306, DateTimeKind.Utc).AddTicks(7161),
                            Name = "Cải thiện sức bền",
                            RecordStatus = 0,
                            TagImage = "https://vinmec-prod.s3.amazonaws.com/images/20210524_085806_814180_chay-bo-bao-nhieu-cal.max-800x800.jpg",
                            TagType = 1
                        },
                        new
                        {
                            Id = new Guid("56cdcfb2-4331-4bc9-a25e-74c470adf1e7"),
                            CreateById = "123abc",
                            CreatedDate = new DateTime(2024, 10, 6, 7, 43, 19, 306, DateTimeKind.Utc).AddTicks(7163),
                            Name = "Cải thiện sức khỏe tổng quát",
                            RecordStatus = 0,
                            TagImage = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcThCjFemkP0h0IZYpu31k-xGK9IvigaysteqA&s",
                            TagType = 1
                        },
                        new
                        {
                            Id = new Guid("3abe01a8-937f-4e4e-bda5-325d660fe4b1"),
                            CreateById = "123abc",
                            CreatedDate = new DateTime(2024, 10, 6, 7, 43, 19, 306, DateTimeKind.Utc).AddTicks(7164),
                            Name = "Yoga / Pilates",
                            RecordStatus = 0,
                            TagImage = "https://thamtapyoga.vn/wp-content/uploads/2024/01/3-2.jpeg",
                            TagType = 2
                        },
                        new
                        {
                            Id = new Guid("5945872f-6d7d-4faa-b51a-24935eed4eeb"),
                            CreateById = "123abc",
                            CreatedDate = new DateTime(2024, 10, 6, 7, 43, 19, 306, DateTimeKind.Utc).AddTicks(7167),
                            Name = "Calisthenic",
                            RecordStatus = 0,
                            TagImage = "https://cdn.nhathuoclongchau.com.vn/unsafe/800x0/https://cms-prod.s3-sgn09.fptcloud.com/giai_dap_thac_mac_calisthenics_khac_gi_gym_1_8d5dd4026b.jpg",
                            TagType = 2
                        },
                        new
                        {
                            Id = new Guid("0f660a55-c30b-4f54-bdce-8006607bd0a1"),
                            CreateById = "123abc",
                            CreatedDate = new DateTime(2024, 10, 6, 7, 43, 19, 306, DateTimeKind.Utc).AddTicks(7169),
                            Name = "Tập sức mạnh",
                            RecordStatus = 0,
                            TagImage = "https://www.thethaothientruong.vn/uploads/2020/Powerlifting-la-gi.jpg",
                            TagType = 2
                        },
                        new
                        {
                            Id = new Guid("540ee3fc-7ae0-4407-991d-eacce9779824"),
                            CreateById = "123abc",
                            CreatedDate = new DateTime(2024, 10, 6, 7, 43, 19, 306, DateTimeKind.Utc).AddTicks(7170),
                            Name = "Cardio",
                            RecordStatus = 0,
                            TagImage = "https://file.hstatic.net/1000308068/file/tap-cardio-vao-luc-nao-la-hieu-qua-nhat_cb884317c05d4df980138121ee113112_grande.jpg",
                            TagType = 2
                        },
                        new
                        {
                            Id = new Guid("a88465bb-ad4e-4089-9aa7-b7a98f66e0ee"),
                            CreateById = "123abc",
                            CreatedDate = new DateTime(2024, 10, 6, 7, 43, 19, 306, DateTimeKind.Utc).AddTicks(7172),
                            Name = "HIIT",
                            RecordStatus = 0,
                            TagImage = "https://hips.hearstapps.com/hmg-prod/images/athletes-doing-push-ups-with-dumbbells-on-floor-royalty-free-image-1638463573.jpg",
                            TagType = 2
                        },
                        new
                        {
                            Id = new Guid("56acf317-2be6-4e09-9e8d-62bf4d0424a3"),
                            CreateById = "123abc",
                            CreatedDate = new DateTime(2024, 10, 6, 7, 43, 19, 306, DateTimeKind.Utc).AddTicks(7173),
                            Name = "Kickfit",
                            RecordStatus = 0,
                            TagImage = "https://storage.googleapis.com/leep_app_website/2020/11/Kick-fit-khong-phai-la-kick-boxing.jpg",
                            TagType = 2
                        },
                        new
                        {
                            Id = new Guid("00d69c03-d1a7-4cc2-b2a6-84619043d98e"),
                            CreateById = "123abc",
                            CreatedDate = new DateTime(2024, 10, 6, 7, 43, 19, 306, DateTimeKind.Utc).AddTicks(7174),
                            Name = "Tập ép dẻo",
                            RecordStatus = 0,
                            TagImage = "https://prod-everyoneactive-wp.s3.eu-west-2.amazonaws.com/wp-content/uploads/2020/03/23151503/flexibility-at-home.jpg",
                            TagType = 2
                        },
                        new
                        {
                            Id = new Guid("0db2c9d3-9a72-483b-a3ff-f7206464ed29"),
                            CreateById = "123abc",
                            CreatedDate = new DateTime(2024, 10, 6, 7, 43, 19, 306, DateTimeKind.Utc).AddTicks(7176),
                            Name = "Thể dục nhịp điệu, theo nhạc",
                            RecordStatus = 0,
                            TagImage = "https://i.vietgiaitri.com/2018/10/9/the-duc-nhip-dieu-b2ab9f.jpg",
                            TagType = 2
                        },
                        new
                        {
                            Id = new Guid("bbb2033c-5ab2-4f4a-8428-7637418ed3a7"),
                            CreateById = "123abc",
                            CreatedDate = new DateTime(2024, 10, 6, 7, 43, 19, 306, DateTimeKind.Utc).AddTicks(7177),
                            Name = "Cùng giới",
                            RecordStatus = 0,
                            SpecialTag = 1,
                            TagType = 3
                        },
                        new
                        {
                            Id = new Guid("7eecea45-87da-4638-8928-83d06a14c656"),
                            CreateById = "123abc",
                            CreatedDate = new DateTime(2024, 10, 6, 7, 43, 19, 306, DateTimeKind.Utc).AddTicks(7194),
                            Name = "Khác giới",
                            RecordStatus = 0,
                            SpecialTag = 0,
                            TagType = 3
                        },
                        new
                        {
                            Id = new Guid("d7859643-898a-4973-90e2-db224879eb7c"),
                            CreateById = "123abc",
                            CreatedDate = new DateTime(2024, 10, 6, 7, 43, 19, 306, DateTimeKind.Utc).AddTicks(7196),
                            Name = "Ngoại hình đẹp",
                            RecordStatus = 0,
                            TagType = 3
                        },
                        new
                        {
                            Id = new Guid("b529e72b-9b1c-41da-8222-3e5effc5122a"),
                            CreateById = "123abc",
                            CreatedDate = new DateTime(2024, 10, 6, 7, 43, 19, 306, DateTimeKind.Utc).AddTicks(7197),
                            Name = "Cung cấp giá cả phải chăng",
                            RecordStatus = 0,
                            TagType = 3
                        },
                        new
                        {
                            Id = new Guid("8274bcf3-ce63-446a-9f6f-ffa6f06d454b"),
                            CreateById = "123abc",
                            CreatedDate = new DateTime(2024, 10, 6, 7, 43, 19, 306, DateTimeKind.Utc).AddTicks(7199),
                            Name = "Gần",
                            RecordStatus = 0,
                            SpecialTag = 2,
                            TagType = 3
                        },
                        new
                        {
                            Id = new Guid("58053e66-d002-4d84-88c6-7a2350623c28"),
                            CreateById = "123abc",
                            CreatedDate = new DateTime(2024, 10, 6, 7, 43, 19, 306, DateTimeKind.Utc).AddTicks(7201),
                            Name = "Tâm huyết với học viên",
                            RecordStatus = 0,
                            TagType = 3
                        },
                        new
                        {
                            Id = new Guid("9767fa26-f187-49e2-a84a-ab43dce23080"),
                            CreateById = "123abc",
                            CreatedDate = new DateTime(2024, 10, 6, 7, 43, 19, 306, DateTimeKind.Utc).AddTicks(7202),
                            Name = "Có trách nhiệm",
                            RecordStatus = 0,
                            TagType = 3
                        },
                        new
                        {
                            Id = new Guid("67cb813e-3b6f-494c-bd5c-ebb88b8115e9"),
                            CreateById = "123abc",
                            CreatedDate = new DateTime(2024, 10, 6, 7, 43, 19, 306, DateTimeKind.Utc).AddTicks(7203),
                            Name = "Có kinh nghiệm",
                            RecordStatus = 0,
                            TagType = 3
                        },
                        new
                        {
                            Id = new Guid("25a3e31f-6be6-42d0-8e04-20a3c87876bf"),
                            CreateById = "123abc",
                            CreatedDate = new DateTime(2024, 10, 6, 7, 43, 19, 306, DateTimeKind.Utc).AddTicks(7205),
                            Name = "Không nặng nề với học viên",
                            RecordStatus = 0,
                            TagType = 3
                        },
                        new
                        {
                            Id = new Guid("320b0cea-352e-4a30-91cd-8d01fc1960e1"),
                            CreateById = "123abc",
                            CreatedDate = new DateTime(2024, 10, 6, 7, 43, 19, 306, DateTimeKind.Utc).AddTicks(7207),
                            Name = "Giàu kiến thức",
                            RecordStatus = 0,
                            TagType = 3
                        },
                        new
                        {
                            Id = new Guid("410c496c-41cd-4ba5-8661-f60b050bc7ef"),
                            CreateById = "123abc",
                            CreatedDate = new DateTime(2024, 10, 6, 7, 43, 19, 306, DateTimeKind.Utc).AddTicks(7208),
                            Name = "Luôn sẵn sàng tư vấn ngoài giờ",
                            RecordStatus = 0,
                            TagType = 3
                        },
                        new
                        {
                            Id = new Guid("576929ce-c125-435b-a886-e18251064fcb"),
                            CreateById = "123abc",
                            CreatedDate = new DateTime(2024, 10, 6, 7, 43, 19, 306, DateTimeKind.Utc).AddTicks(7210),
                            Name = "Biết truyền cảm hứng, tạo động lực",
                            RecordStatus = 0,
                            TagType = 3
                        },
                        new
                        {
                            Id = new Guid("47a9e6c0-9215-4dae-b48d-2bffb5f71d9e"),
                            CreateById = "123abc",
                            CreatedDate = new DateTime(2024, 10, 6, 7, 43, 19, 306, DateTimeKind.Utc).AddTicks(7212),
                            Name = "Đảm bảo mục tiêu cho học viên",
                            RecordStatus = 0,
                            TagType = 3
                        },
                        new
                        {
                            Id = new Guid("2b709d84-e994-494f-9130-669ba99a06e5"),
                            CreateById = "123abc",
                            CreatedDate = new DateTime(2024, 10, 6, 7, 43, 19, 306, DateTimeKind.Utc).AddTicks(7213),
                            Name = "Kiên trì",
                            RecordStatus = 0,
                            TagType = 4
                        },
                        new
                        {
                            Id = new Guid("20756b72-fd94-4727-a169-70cef18697c9"),
                            CreateById = "123abc",
                            CreatedDate = new DateTime(2024, 10, 6, 7, 43, 19, 306, DateTimeKind.Utc).AddTicks(7214),
                            Name = "Siêng năng",
                            RecordStatus = 0,
                            TagType = 4
                        },
                        new
                        {
                            Id = new Guid("b742b66c-2697-49da-8c1c-8164ad38337d"),
                            CreateById = "123abc",
                            CreatedDate = new DateTime(2024, 10, 6, 7, 43, 19, 306, DateTimeKind.Utc).AddTicks(7216),
                            Name = "Vui tính, hài hước",
                            RecordStatus = 0,
                            TagType = 4
                        },
                        new
                        {
                            Id = new Guid("d878a181-b6ab-40c0-836e-2451229cda9b"),
                            CreateById = "123abc",
                            CreatedDate = new DateTime(2024, 10, 6, 7, 43, 19, 306, DateTimeKind.Utc).AddTicks(7217),
                            Name = "Hòa đồng",
                            RecordStatus = 0,
                            TagType = 4
                        },
                        new
                        {
                            Id = new Guid("b10f4948-ef5b-4795-a536-e84fc4fc075e"),
                            CreateById = "123abc",
                            CreatedDate = new DateTime(2024, 10, 6, 7, 43, 19, 306, DateTimeKind.Utc).AddTicks(7219),
                            Name = "Năng động",
                            RecordStatus = 0,
                            TagType = 4
                        },
                        new
                        {
                            Id = new Guid("7da317b7-1a37-44bd-a77a-d9e4b94a9a1b"),
                            CreateById = "123abc",
                            CreatedDate = new DateTime(2024, 10, 6, 7, 43, 19, 306, DateTimeKind.Utc).AddTicks(7220),
                            Name = "Dễ gần",
                            RecordStatus = 0,
                            TagType = 4
                        },
                        new
                        {
                            Id = new Guid("08f67f61-c3d8-4232-bb27-2698b56cb2c2"),
                            CreateById = "123abc",
                            CreatedDate = new DateTime(2024, 10, 6, 7, 43, 19, 306, DateTimeKind.Utc).AddTicks(7222),
                            Name = "Thi thoảng bất thường",
                            RecordStatus = 0,
                            TagType = 4
                        },
                        new
                        {
                            Id = new Guid("dd9fb7b1-d2b3-4720-bee6-3a7b67f23ed6"),
                            CreateById = "123abc",
                            CreatedDate = new DateTime(2024, 10, 6, 7, 43, 19, 306, DateTimeKind.Utc).AddTicks(7223),
                            Name = "Lạnh lùng, ít nói",
                            RecordStatus = 0,
                            TagType = 4
                        },
                        new
                        {
                            Id = new Guid("bcd05733-a4be-4a63-aea4-ef92d74ba003"),
                            CreateById = "123abc",
                            CreatedDate = new DateTime(2024, 10, 6, 7, 43, 19, 306, DateTimeKind.Utc).AddTicks(7224),
                            Name = "Nhút nhát",
                            RecordStatus = 0,
                            TagType = 4
                        },
                        new
                        {
                            Id = new Guid("d8ee32ca-1d48-4b93-878b-924f9b492fa3"),
                            CreateById = "123abc",
                            CreatedDate = new DateTime(2024, 10, 6, 7, 43, 19, 306, DateTimeKind.Utc).AddTicks(7225),
                            Name = "Nhạy cảm",
                            RecordStatus = 0,
                            TagType = 4
                        },
                        new
                        {
                            Id = new Guid("e6f418bf-df3d-48f8-aade-f8fd27639db1"),
                            CreateById = "123abc",
                            CreatedDate = new DateTime(2024, 10, 6, 7, 43, 19, 306, DateTimeKind.Utc).AddTicks(7227),
                            Name = "Dễ nản",
                            RecordStatus = 0,
                            TagType = 4
                        },
                        new
                        {
                            Id = new Guid("77e699f7-b9e8-49d4-8c53-a15ca5327c31"),
                            CreateById = "123abc",
                            CreatedDate = new DateTime(2024, 10, 6, 7, 43, 19, 306, DateTimeKind.Utc).AddTicks(7228),
                            Name = "Hay bị lười",
                            RecordStatus = 0,
                            TagType = 4
                        },
                        new
                        {
                            Id = new Guid("82ec8cef-22ed-4d77-9691-79a2093be7a6"),
                            CreateById = "123abc",
                            CreatedDate = new DateTime(2024, 10, 6, 7, 43, 19, 306, DateTimeKind.Utc).AddTicks(7230),
                            Name = "Sẵn sàng học hỏi",
                            RecordStatus = 0,
                            TagType = 4
                        },
                        new
                        {
                            Id = new Guid("609a3f99-2652-4c8f-989a-8405db6c0479"),
                            CreateById = "123abc",
                            CreatedDate = new DateTime(2024, 10, 6, 7, 43, 19, 306, DateTimeKind.Utc).AddTicks(7231),
                            Name = "Hiền lành",
                            RecordStatus = 0,
                            TagType = 4
                        },
                        new
                        {
                            Id = new Guid("b888a39f-3972-4fab-b4f7-108513786392"),
                            CreateById = "123abc",
                            CreatedDate = new DateTime(2024, 10, 6, 7, 43, 19, 306, DateTimeKind.Utc).AddTicks(7232),
                            Name = "Rảnh rỗi",
                            RecordStatus = 0,
                            TagType = 4
                        },
                        new
                        {
                            Id = new Guid("7ac19a30-5611-4294-b1c0-8c4fe87070e0"),
                            CreateById = "123abc",
                            CreatedDate = new DateTime(2024, 10, 6, 7, 43, 19, 306, DateTimeKind.Utc).AddTicks(7234),
                            Name = "Cầu toàn",
                            RecordStatus = 0,
                            TagType = 4
                        },
                        new
                        {
                            Id = new Guid("2b46d75f-d748-4aee-b0a1-140c9cf64d1a"),
                            CreateById = "123abc",
                            CreatedDate = new DateTime(2024, 10, 6, 7, 43, 19, 306, DateTimeKind.Utc).AddTicks(7235),
                            Name = "Thoải mái",
                            RecordStatus = 0,
                            TagType = 4
                        },
                        new
                        {
                            Id = new Guid("dc99a08a-a4a2-4793-bdcf-dca797cab101"),
                            CreateById = "123abc",
                            CreatedDate = new DateTime(2024, 10, 6, 7, 43, 19, 306, DateTimeKind.Utc).AddTicks(7236),
                            Name = "Dễ bị khó chịu",
                            RecordStatus = 0,
                            TagType = 4
                        },
                        new
                        {
                            Id = new Guid("b6e8abbb-a918-4dd0-ae74-382917f483a3"),
                            CreateById = "123abc",
                            CreatedDate = new DateTime(2024, 10, 6, 7, 43, 19, 306, DateTimeKind.Utc).AddTicks(7237),
                            Name = "Độc thân lâu năm",
                            RecordStatus = 0,
                            TagType = 4
                        });
                });

            modelBuilder.Entity("FitSwipe.DataAccess.Model.Entity.Training", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Feedback")
                        .HasColumnType("text");

                    b.Property<string>("PTId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("PricePerSlot")
                        .HasColumnType("integer");

                    b.Property<double?>("Rating")
                        .HasColumnType("double precision");

                    b.Property<int>("RecordStatus")
                        .HasColumnType("integer");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<string>("TraineeId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("PTId");

                    b.HasIndex("TraineeId");

                    b.ToTable("Trainings");
                });

            modelBuilder.Entity("FitSwipe.DataAccess.Model.Entity.Transaction", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("Amount")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Method")
                        .HasColumnType("integer");

                    b.Property<int>("RecordStatus")
                        .HasColumnType("integer");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<string>("TranscationCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("UserFireBaseId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("UserFireBaseId");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("FitSwipe.DataAccess.Model.Entity.TransactionSlot", b =>
                {
                    b.Property<Guid>("SlotId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("TransactionId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<int>("RecordStatus")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("SlotId", "TransactionId");

                    b.HasIndex("TransactionId");

                    b.ToTable("TransactionSlots");
                });

            modelBuilder.Entity("FitSwipe.DataAccess.Model.Entity.User", b =>
                {
                    b.Property<string>("FireBaseId")
                        .HasColumnType("text");

                    b.Property<string>("AvatarUrl")
                        .HasColumnType("text");

                    b.Property<int?>("Balance")
                        .HasColumnType("integer");

                    b.Property<string>("Bio")
                        .HasColumnType("text");

                    b.Property<string>("City")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("District")
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Gender")
                        .HasColumnType("integer");

                    b.Property<double?>("Height")
                        .HasColumnType("double precision");

                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Job")
                        .HasColumnType("text");

                    b.Property<string>("PTDegreeImageUrl")
                        .HasColumnType("text");

                    b.Property<double?>("PTExperienceYear")
                        .HasColumnType("double precision");

                    b.Property<double?>("PTRating")
                        .HasColumnType("double precision");

                    b.Property<int?>("PTStatus")
                        .HasColumnType("integer");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.Property<double>("PricePerHour")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(10,2)")
                        .HasDefaultValue(0.0);

                    b.Property<int>("RecordStatus")
                        .HasColumnType("integer");

                    b.Property<int>("Role")
                        .HasColumnType("integer");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<string>("Street")
                        .HasColumnType("text");

                    b.Property<int?>("SubscriptionLevel")
                        .HasColumnType("integer");

                    b.Property<int?>("SubscriptionPaymentStatus")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("SubscriptionPurchasedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Ward")
                        .HasColumnType("text");

                    b.Property<double?>("Weight")
                        .HasColumnType("double precision");

                    b.HasKey("FireBaseId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            FireBaseId = "123abc",
                            AvatarUrl = "https://i.ibb.co/HYsHmpm/pt5.png",
                            Balance = 1000,
                            Bio = "Fitness enthusiast and certified personal trainer.",
                            City = "New York",
                            CreatedDate = new DateTime(2024, 10, 6, 7, 43, 19, 306, DateTimeKind.Utc).AddTicks(6822),
                            DateOfBirth = new DateTime(1990, 5, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            District = "Manhattan",
                            Email = "john.doe@example.com",
                            Gender = 0,
                            Height = 180.30000000000001,
                            Id = new Guid("d6f01fd6-d848-418b-8dd8-6169ec15c575"),
                            Job = "Student",
                            Password = "hashedpassword1",
                            Phone = "1234567890",
                            PricePerHour = 0.0,
                            RecordStatus = 0,
                            Role = 0,
                            Status = 0,
                            Street = "5th Avenue",
                            UserName = "john doe",
                            Ward = "Ward 5",
                            Weight = 75.5
                        },
                        new
                        {
                            FireBaseId = "456def",
                            AvatarUrl = "https://i.ibb.co/ZVhq6W7/c239694df88fecb8c521de3dd8625ba10fbbfa14f3559342640b9710e25b9d01-w-1024-h-1024-pmaid-165228136.png",
                            Balance = 1500,
                            Bio = "Yoga instructor with a passion for holistic health.",
                            City = "Los Angeles",
                            CreatedDate = new DateTime(2024, 10, 6, 7, 43, 19, 306, DateTimeKind.Utc).AddTicks(6865),
                            DateOfBirth = new DateTime(1985, 8, 20, 0, 0, 0, 0, DateTimeKind.Utc),
                            District = "Beverly Hills",
                            Email = "jane.smith@example.com",
                            Gender = 1,
                            Height = 170.19999999999999,
                            Id = new Guid("6d3f1997-6be8-489f-9915-18c99f53f76d"),
                            Job = "Yoga Instructor",
                            PTExperienceYear = 3.5,
                            PTStatus = 1,
                            Password = "hashedpassword2",
                            Phone = "0987654321",
                            PricePerHour = 100000.0,
                            RecordStatus = 0,
                            Role = 1,
                            Status = 0,
                            Street = "Rodeo Drive",
                            SubscriptionLevel = 1,
                            SubscriptionPaymentStatus = 0,
                            SubscriptionPurchasedDate = new DateTime(2023, 2, 10, 0, 0, 0, 0, DateTimeKind.Utc),
                            UserName = "jane smith",
                            Ward = "Ward 3",
                            Weight = 65.0
                        },
                        new
                        {
                            FireBaseId = "789ghi",
                            AvatarUrl = "https://i.ibb.co/zVGS1Xv/pt1.png",
                            Balance = 2000,
                            Bio = "Aspiring bodybuilder and nutrition expert.",
                            City = "Chicago",
                            CreatedDate = new DateTime(2024, 10, 6, 7, 43, 19, 306, DateTimeKind.Utc).AddTicks(6875),
                            DateOfBirth = new DateTime(1992, 3, 10, 0, 0, 0, 0, DateTimeKind.Utc),
                            District = "Lincoln Park",
                            Email = "alex.jones@example.com",
                            Gender = 0,
                            Height = 185.40000000000001,
                            Id = new Guid("a03d0b49-caa9-4fa9-9445-167dd8de63b1"),
                            Job = "Nutritionist",
                            PTExperienceYear = 2.0,
                            PTStatus = 1,
                            Password = "hashedpassword3",
                            Phone = "5551234567",
                            PricePerHour = 150000.0,
                            RecordStatus = 0,
                            Role = 1,
                            Status = 0,
                            Street = "Clark Street",
                            UserName = "alex jones",
                            Ward = "Ward 7",
                            Weight = 85.0
                        },
                        new
                        {
                            FireBaseId = "101jkl",
                            AvatarUrl = "https://i.ibb.co/QY6zDfp/pt3.png",
                            Balance = 3500,
                            Bio = "Certified yoga instructor and personal trainer with 5 years of experience.",
                            City = "New York",
                            CreatedDate = new DateTime(2024, 10, 6, 7, 43, 19, 306, DateTimeKind.Utc).AddTicks(6880),
                            DateOfBirth = new DateTime(1988, 7, 15, 0, 0, 0, 0, DateTimeKind.Utc),
                            District = "Manhattan",
                            Email = "sarah.smith@example.com",
                            Gender = 0,
                            Height = 170.19999999999999,
                            Id = new Guid("9eb7c5f3-bba3-44c8-a1d6-4fb10e027e99"),
                            Job = "Yoga Instructor",
                            PTExperienceYear = 5.0,
                            PTStatus = 1,
                            Password = "hashedpassword4",
                            Phone = "5559876543",
                            PricePerHour = 200000.0,
                            RecordStatus = 0,
                            Role = 1,
                            Status = 0,
                            Street = "Broadway",
                            UserName = "jocker_lol",
                            Ward = "Ward 3",
                            Weight = 62.5
                        },
                        new
                        {
                            FireBaseId = "202mno",
                            AvatarUrl = "https://i.ibb.co/27LXG3q/pt4.png",
                            Balance = 2800,
                            Bio = "CrossFit enthusiast and certified personal trainer specializing in HIIT workouts.",
                            City = "Los Angeles",
                            CreatedDate = new DateTime(2024, 10, 6, 7, 43, 19, 306, DateTimeKind.Utc).AddTicks(6885),
                            DateOfBirth = new DateTime(1995, 11, 22, 0, 0, 0, 0, DateTimeKind.Utc),
                            District = "Santa Monica",
                            Email = "mike.johnson@example.com",
                            Gender = 0,
                            Height = 180.0,
                            Id = new Guid("8b5913a1-6e0e-46b2-ae58-25c57a33e59e"),
                            Job = "CrossFit Trainer",
                            PTExperienceYear = 3.5,
                            PTStatus = 1,
                            Password = "hashedpassword5",
                            Phone = "5552468101",
                            PricePerHour = 180000.0,
                            RecordStatus = 0,
                            Role = 1,
                            Status = 0,
                            Street = "Ocean Avenue",
                            UserName = "mike_johnson",
                            Ward = "Ward 2",
                            Weight = 78.299999999999997
                        },
                        new
                        {
                            FireBaseId = "303pqr",
                            AvatarUrl = "https://i.ibb.co/TWNFj0M/image.png",
                            Balance = 4200,
                            Bio = "Sports nutritionist and strength training coach with a focus on women's fitness.",
                            City = "Seattle",
                            CreatedDate = new DateTime(2024, 10, 6, 7, 43, 19, 306, DateTimeKind.Utc).AddTicks(6889),
                            DateOfBirth = new DateTime(1990, 5, 8, 0, 0, 0, 0, DateTimeKind.Utc),
                            District = "Capitol Hill",
                            Email = "emma.davis@example.com",
                            Gender = 1,
                            Height = 165.5,
                            Id = new Guid("975b552b-f8f2-48bf-b5e1-09a6f222a292"),
                            Job = "Strength Coach",
                            PTExperienceYear = 7.0,
                            PTStatus = 1,
                            Password = "hashedpassword6",
                            Phone = "5553691470",
                            PricePerHour = 220000.0,
                            RecordStatus = 0,
                            Role = 1,
                            Status = 0,
                            Street = "Pike Street",
                            UserName = "emma_davis",
                            Ward = "Ward 5",
                            Weight = 58.700000000000003
                        },
                        new
                        {
                            FireBaseId = "404stu",
                            AvatarUrl = "https://i.ibb.co/mR8n9zJ/pt2.png",
                            Balance = 3800,
                            Bio = "Former professional soccer player turned fitness coach. Specializes in sports-specific training.",
                            City = "Miami",
                            CreatedDate = new DateTime(2024, 10, 6, 7, 43, 19, 306, DateTimeKind.Utc).AddTicks(6903),
                            DateOfBirth = new DateTime(1987, 9, 30, 0, 0, 0, 0, DateTimeKind.Utc),
                            District = "South Beach",
                            Email = "carlos.rodriguez@example.com",
                            Gender = 0,
                            Height = 175.30000000000001,
                            Id = new Guid("dbfd485a-cbbb-42f7-ad6a-d165ba82c828"),
                            Job = "Sports Performance Coach",
                            PTExperienceYear = 6.5,
                            PTStatus = 1,
                            Password = "hashedpassword7",
                            Phone = "5557891234",
                            PricePerHour = 190000.0,
                            RecordStatus = 0,
                            Role = 1,
                            Status = 0,
                            Street = "Ocean Drive",
                            UserName = "carlos_rodriguez",
                            Ward = "Ward 4",
                            Weight = 75.799999999999997
                        },
                        new
                        {
                            FireBaseId = "505vwx",
                            AvatarUrl = "https://i.ibb.co/dDrHRqL/40c820d3e9d438025d4def0dedeab78a883cb8ab8c34614d1fb7d5ddf147668e-w-1024-h-1024-pmaid-165229888.png",
                            Balance = 3200,
                            Bio = "Pilates instructor and rehabilitation specialist. Focused on posture correction and core strength.",
                            City = "San Francisco",
                            CreatedDate = new DateTime(2024, 10, 6, 7, 43, 19, 306, DateTimeKind.Utc).AddTicks(6909),
                            DateOfBirth = new DateTime(1993, 2, 14, 0, 0, 0, 0, DateTimeKind.Utc),
                            District = "Marina",
                            Email = "lisa.chen@example.com",
                            Gender = 1,
                            Height = 162.0,
                            Id = new Guid("c38653b4-abec-4707-b57a-72e9075b7da0"),
                            Job = "Pilates Instructor",
                            PTExperienceYear = 4.0,
                            PTStatus = 1,
                            Password = "hashedpassword8",
                            Phone = "5554567890",
                            PricePerHour = 175000.0,
                            RecordStatus = 0,
                            Role = 1,
                            Status = 0,
                            Street = "Chestnut Street",
                            UserName = "lisa_chen",
                            Ward = "Ward 2",
                            Weight = 54.200000000000003
                        },
                        new
                        {
                            FireBaseId = "606yza",
                            AvatarUrl = "https://i.ibb.co/QY6zDfp/pt3.png",
                            Balance = 4500,
                            Bio = "Bodybuilding champion and powerlifting coach. Specializes in muscle gain and strength training.",
                            City = "Houston",
                            CreatedDate = new DateTime(2024, 10, 6, 7, 43, 19, 306, DateTimeKind.Utc).AddTicks(6913),
                            DateOfBirth = new DateTime(1985, 8, 5, 0, 0, 0, 0, DateTimeKind.Utc),
                            District = "Midtown",
                            Email = "marcus.brown@example.com",
                            Gender = 0,
                            Height = 188.0,
                            Id = new Guid("b50aa7ec-4e08-4761-80d6-ce7ecf470172"),
                            Job = "Strength and Conditioning Coach",
                            PTExperienceYear = 10.0,
                            PTStatus = 1,
                            Password = "hashedpassword9",
                            Phone = "5552345678",
                            PricePerHour = 230000.0,
                            RecordStatus = 0,
                            Role = 1,
                            Status = 0,
                            Street = "Main Street",
                            UserName = "marcus_brown",
                            Ward = "Ward 3",
                            Weight = 90.5
                        },
                        new
                        {
                            FireBaseId = "707bcd",
                            AvatarUrl = "https://i.ibb.co/HYsHmpm/pt5.png",
                            Balance = 3900,
                            Bio = "Certified nutritionist and functional fitness trainer. Specializes in weight management and holistic health.",
                            City = "Boston",
                            CreatedDate = new DateTime(2024, 10, 6, 7, 43, 19, 306, DateTimeKind.Utc).AddTicks(6918),
                            DateOfBirth = new DateTime(1991, 12, 18, 0, 0, 0, 0, DateTimeKind.Utc),
                            District = "Back Bay",
                            Email = "will.taylor@example.com",
                            Gender = 0,
                            Height = 168.5,
                            Id = new Guid("c51f83e4-2f6b-4999-b0d7-fc7268b6c74c"),
                            Job = "Functional Fitness Trainer",
                            PTExperienceYear = 3.5,
                            PTStatus = 1,
                            Password = "hashedpassword10",
                            Phone = "5558765432",
                            PricePerHour = 195000.0,
                            RecordStatus = 0,
                            Role = 1,
                            Status = 0,
                            Street = "Newbury Street",
                            UserName = "will_taylor",
                            Ward = "Ward 5",
                            Weight = 60.100000000000001
                        });
                });

            modelBuilder.Entity("FitSwipe.DataAccess.Model.Entity.UserMedia", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("MediaUrl")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("RecordStatus")
                        .HasColumnType("integer");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserMedias");
                });

            modelBuilder.Entity("FitSwipe.DataAccess.Model.Entity.UserTag", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("RecordStatus")
                        .HasColumnType("integer");

                    b.Property<Guid>("TagId")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("TagId");

                    b.HasIndex("UserId");

                    b.ToTable("UserTags");
                });

            modelBuilder.Entity("FitSwipe.DataAccess.Model.Entity.FeedbackImage", b =>
                {
                    b.HasOne("FitSwipe.DataAccess.Model.Entity.Training", "Training")
                        .WithMany("FeedbackImages")
                        .HasForeignKey("TrainingId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Training");
                });

            modelBuilder.Entity("FitSwipe.DataAccess.Model.Entity.Report", b =>
                {
                    b.HasOne("FitSwipe.DataAccess.Model.Entity.User", "Reporter")
                        .WithMany("ReportsCreated")
                        .HasForeignKey("ReporterId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("FitSwipe.DataAccess.Model.Entity.User", "Target")
                        .WithMany("ReportsReceived")
                        .HasForeignKey("TargetId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Reporter");

                    b.Navigation("Target");
                });

            modelBuilder.Entity("FitSwipe.DataAccess.Model.Entity.ReportImage", b =>
                {
                    b.HasOne("FitSwipe.DataAccess.Model.Entity.Report", "Report")
                        .WithMany("ReportImages")
                        .HasForeignKey("ReportId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Report");
                });

            modelBuilder.Entity("FitSwipe.DataAccess.Model.Entity.Slot", b =>
                {
                    b.HasOne("FitSwipe.DataAccess.Model.Entity.User", "CreateBy")
                        .WithMany("SlotsCreated")
                        .HasForeignKey("CreateById")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("FitSwipe.DataAccess.Model.Entity.Training", "Training")
                        .WithMany("Slots")
                        .HasForeignKey("TrainingId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("CreateBy");

                    b.Navigation("Training");
                });

            modelBuilder.Entity("FitSwipe.DataAccess.Model.Entity.SlotVideos", b =>
                {
                    b.HasOne("FitSwipe.DataAccess.Model.Entity.Slot", "Slot")
                        .WithMany("Videos")
                        .HasForeignKey("SlotId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Slot");
                });

            modelBuilder.Entity("FitSwipe.DataAccess.Model.Entity.Tag", b =>
                {
                    b.HasOne("FitSwipe.DataAccess.Model.Entity.User", "CreateBy")
                        .WithMany("TagsCreated")
                        .HasForeignKey("CreateById")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CreateBy");
                });

            modelBuilder.Entity("FitSwipe.DataAccess.Model.Entity.Training", b =>
                {
                    b.HasOne("FitSwipe.DataAccess.Model.Entity.User", "PT")
                        .WithMany("TrainingsInstructing")
                        .HasForeignKey("PTId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("FitSwipe.DataAccess.Model.Entity.User", "Trainee")
                        .WithMany("TrainingsAttending")
                        .HasForeignKey("TraineeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("PT");

                    b.Navigation("Trainee");
                });

            modelBuilder.Entity("FitSwipe.DataAccess.Model.Entity.Transaction", b =>
                {
                    b.HasOne("FitSwipe.DataAccess.Model.Entity.User", "User")
                        .WithMany("Transactions")
                        .HasForeignKey("UserFireBaseId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("FitSwipe.DataAccess.Model.Entity.TransactionSlot", b =>
                {
                    b.HasOne("FitSwipe.DataAccess.Model.Entity.Slot", "Slot")
                        .WithMany("TransactionSlots")
                        .HasForeignKey("SlotId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FitSwipe.DataAccess.Model.Entity.Transaction", "Transaction")
                        .WithMany("TransactionSlots")
                        .HasForeignKey("TransactionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Slot");

                    b.Navigation("Transaction");
                });

            modelBuilder.Entity("FitSwipe.DataAccess.Model.Entity.UserMedia", b =>
                {
                    b.HasOne("FitSwipe.DataAccess.Model.Entity.User", "User")
                        .WithMany("UserMedias")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("FitSwipe.DataAccess.Model.Entity.UserTag", b =>
                {
                    b.HasOne("FitSwipe.DataAccess.Model.Entity.Tag", "Tag")
                        .WithMany("UserTags")
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("FitSwipe.DataAccess.Model.Entity.User", "User")
                        .WithMany("UserTags")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Tag");

                    b.Navigation("User");
                });

            modelBuilder.Entity("FitSwipe.DataAccess.Model.Entity.Report", b =>
                {
                    b.Navigation("ReportImages");
                });

            modelBuilder.Entity("FitSwipe.DataAccess.Model.Entity.Slot", b =>
                {
                    b.Navigation("TransactionSlots");

                    b.Navigation("Videos");
                });

            modelBuilder.Entity("FitSwipe.DataAccess.Model.Entity.Tag", b =>
                {
                    b.Navigation("UserTags");
                });

            modelBuilder.Entity("FitSwipe.DataAccess.Model.Entity.Training", b =>
                {
                    b.Navigation("FeedbackImages");

                    b.Navigation("Slots");
                });

            modelBuilder.Entity("FitSwipe.DataAccess.Model.Entity.Transaction", b =>
                {
                    b.Navigation("TransactionSlots");
                });

            modelBuilder.Entity("FitSwipe.DataAccess.Model.Entity.User", b =>
                {
                    b.Navigation("ReportsCreated");

                    b.Navigation("ReportsReceived");

                    b.Navigation("SlotsCreated");

                    b.Navigation("TagsCreated");

                    b.Navigation("TrainingsAttending");

                    b.Navigation("TrainingsInstructing");

                    b.Navigation("Transactions");

                    b.Navigation("UserMedias");

                    b.Navigation("UserTags");
                });
#pragma warning restore 612, 618
        }
    }
}
